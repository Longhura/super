-- Roblox Executor Script
-- Features: Draggable GUI, Minimize, Close, Player Targeting, Teleport, Noclip, Distance Adjustment, Auto Platform, Position Saving

-- Configuration (EDIT THESE VALUES)
local KEY = "123456" -- Change this to your desired key
local EXPIRATION_DATE = {
Year = 2025,
Month = 0,
Day = 128,
Hour = 0,
Minute = 0,
Second = 0
}

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- Variables
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Camera = workspace.CurrentCamera

-- State Variables
local NoClipping = false
local Authenticated = false
local Minimized = false
local AutoPlatform = false
local RunningAway = false
local FollowingTarget = false
local AutoNextTarget = false
local AutoCheckPosition = false
local SubMenuVisible = false
local PositionSubMenuVisible = false
local ESPEnabled = false
local HitboxEnabled = false
local GlowEnabled = false
local ESPHPEnabled = false
local ESPPositionEnabled = false
local AutoDisableOnTargetDeath = false
local AutoRunEnabled = false
local ViewingTarget = false

-- Distance Settings
local DistanceBehind = 5
local DistanceAbove = 0
local DetectionRadius = 20

-- Safe Position Boundaries
local SafePositionMin = Vector3.new(-1000, -1000, -1000)
local SafePositionMax = Vector3.new(1000, 1000, 1000)

-- Saved Position
local SavedPosition = nil

-- Target Variables
local TargetPlayer = nil
local PlayerList = {}

-- Auto Run Settings
local LowHealthThreshold = 50 -- Default 50%
local HighHealthThreshold = 51 -- Default 51%
local AutoRunHeight = 500 -- Default 500 blocks up
local PositionBeforeAutoRun = nil

-- Position Follow Settings
local FollowPosition = nil
local FollowingPosition = false

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ExecutorGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 350, 0, 400) -- Reduced height
MainFrame.Position = UDim2.new(0.5, -175, 0.5, -200)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true -- Enable built-in dragging
MainFrame.Parent = ScreenGui

-- Add UICorner for rounded corners
local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 8)
MainCorner.Parent = MainFrame

-- Add UIStroke for rainbow border
local MainStroke = Instance.new("UIStroke")
MainStroke.Thickness = 2
MainStroke.Color = Color3.fromRGB(255, 0, 0)
MainStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
MainStroke.Parent = MainFrame

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

-- Add UICorner for title bar
local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 8)
TitleCorner.Parent = TitleBar

-- Title
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, -90, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.BackgroundTransparency = 1
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 16
Title.Font = Enum.Font.SourceSansBold
Title.Text = "Roblox Executor"
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = TitleBar

-- SubMenu Button
local SubMenuButton = Instance.new("TextButton")
SubMenuButton.Name = "SubMenuButton"
SubMenuButton.Size = UDim2.new(0, 30, 0, 30)
SubMenuButton.Position = UDim2.new(1, -90, 0, 0)
SubMenuButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
SubMenuButton.BorderSizePixel = 0
SubMenuButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SubMenuButton.TextSize = 16
SubMenuButton.Font = Enum.Font.SourceSansBold
SubMenuButton.Text = "‚â°"
SubMenuButton.Parent = TitleBar

-- Add UICorner for submenu button
local SubMenuCorner = Instance.new("UICorner")
SubMenuCorner.CornerRadius = UDim.new(0, 8)
SubMenuCorner.Parent = SubMenuButton

-- Position SubMenu Button
local PositionSubMenuButton = Instance.new("TextButton")
PositionSubMenuButton.Name = "PositionSubMenuButton"
PositionSubMenuButton.Size = UDim2.new(0, 30, 0, 30)
PositionSubMenuButton.Position = UDim2.new(1, -120, 0, 0)
PositionSubMenuButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
PositionSubMenuButton.BorderSizePixel = 0
PositionSubMenuButton.TextColor3 = Color3.fromRGB(255, 255, 255)
PositionSubMenuButton.TextSize = 16
PositionSubMenuButton.Font = Enum.Font.SourceSansBold
PositionSubMenuButton.Text = "üìç"
PositionSubMenuButton.Parent = TitleBar

-- Add UICorner for position submenu button
local PositionSubMenuCorner = Instance.new("UICorner")
PositionSubMenuCorner.CornerRadius = UDim.new(0, 8)
PositionSubMenuCorner.Parent = PositionSubMenuButton

-- Close Button
local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
CloseButton.BorderSizePixel = 0
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 16
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.Text = "X"
CloseButton.Parent = TitleBar

-- Add UICorner for close button
local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 8)
CloseCorner.Parent = CloseButton

-- Minimize Button
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Position = UDim2.new(1, -60, 0, 0)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextSize = 16
MinimizeButton.Font = Enum.Font.SourceSansBold
MinimizeButton.Text = "-"
MinimizeButton.Parent = TitleBar

-- Add UICorner for minimize button
local MinimizeCorner = Instance.new("UICorner")
MinimizeCorner.CornerRadius = UDim.new(0, 8)
MinimizeCorner.Parent = MinimizeButton

-- Content Frame
local ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Size = UDim2.new(1, 0, 1, -30)
ContentFrame.Position = UDim2.new(0, 0, 0, 30)
ContentFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ContentFrame.BorderSizePixel = 0
ContentFrame.Parent = MainFrame

-- Authentication Frame
local AuthFrame = Instance.new("Frame")
AuthFrame.Name = "AuthFrame"
AuthFrame.Size = UDim2.new(1, 0, 1, 0)
AuthFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
AuthFrame.BorderSizePixel = 0
AuthFrame.Visible = true
AuthFrame.Parent = ContentFrame

local AuthTitle = Instance.new("TextLabel")
AuthTitle.Name = "AuthTitle"
AuthTitle.Size = UDim2.new(1, 0, 0, 40)
AuthTitle.Position = UDim2.new(0, 0, 0.1, 0)
AuthTitle.BackgroundTransparency = 1
AuthTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
AuthTitle.TextSize = 20
AuthTitle.Font = Enum.Font.SourceSansBold
AuthTitle.Text = "Enter Key to Continue"
AuthTitle.Parent = AuthFrame

local KeyInput = Instance.new("TextBox")
KeyInput.Name = "KeyInput"
KeyInput.Size = UDim2.new(0.8, 0, 0, 40)
KeyInput.Position = UDim2.new(0.1, 0, 0.3, 0)
KeyInput.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
KeyInput.BorderSizePixel = 0
KeyInput.TextColor3 = Color3.fromRGB(255, 255, 255)
KeyInput.TextSize = 16
KeyInput.Font = Enum.Font.SourceSans
KeyInput.PlaceholderText = "Enter Key Here..."
KeyInput.Text = ""
KeyInput.ClearTextOnFocus = false
KeyInput.Parent = AuthFrame

-- Add UICorner for key input
local KeyInputCorner = Instance.new("UICorner")
KeyInputCorner.CornerRadius = UDim.new(0, 8)
KeyInputCorner.Parent = KeyInput

local SubmitButton = Instance.new("TextButton")
SubmitButton.Name = "SubmitButton"
SubmitButton.Size = UDim2.new(0.5, 0, 0, 40)
SubmitButton.Position = UDim2.new(0.25, 0, 0.5, 0)
SubmitButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
SubmitButton.BorderSizePixel = 0
SubmitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SubmitButton.TextSize = 16
SubmitButton.Font = Enum.Font.SourceSansBold
SubmitButton.Text = "Submit"
SubmitButton.Parent = AuthFrame

-- Add UICorner for submit button
local SubmitCorner = Instance.new("UICorner")
SubmitCorner.CornerRadius = UDim.new(0, 8)
SubmitCorner.Parent = SubmitButton

-- Changed from key display to a note
local KeyNote = Instance.new("TextLabel")
KeyNote.Name = "KeyNote"
KeyNote.Size = UDim2.new(1, 0, 0, 30)
KeyNote.Position = UDim2.new(0, 0, 0.7, 0)
KeyNote.BackgroundTransparency = 1
KeyNote.TextColor3 = Color3.fromRGB(200, 200, 200)
KeyNote.TextSize = 14
KeyNote.Font = Enum.Font.SourceSans
KeyNote.Text = "Li√™n h·ªá admin ƒë·ªÉ nh·∫≠n key"
KeyNote.Parent = AuthFrame

-- Main Features Frame (Hidden until authenticated)
local FeaturesFrame = Instance.new("Frame")
FeaturesFrame.Name = "FeaturesFrame"
FeaturesFrame.Size = UDim2.new(1, 0, 1, 0)
FeaturesFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
FeaturesFrame.BorderSizePixel = 0
FeaturesFrame.Visible = false
FeaturesFrame.Parent = ContentFrame

-- Create ScrollingFrame for content with increased canvas size
local ScrollFrame = Instance.new("ScrollingFrame")
ScrollFrame.Name = "ScrollFrame"
ScrollFrame.Size = UDim2.new(1, -10, 1, -10)
ScrollFrame.Position = UDim2.new(0, 5, 0, 5)
ScrollFrame.BackgroundTransparency = 1
ScrollFrame.BorderSizePixel = 0
ScrollFrame.ScrollBarThickness = 6
ScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 950) -- Increased canvas size for more scrolling space
ScrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y -- Automatically adjust canvas size based on content
ScrollFrame.ScrollingDirection = Enum.ScrollingDirection.Y -- Only allow vertical scrolling
ScrollFrame.ScrollingEnabled = true -- Ensure scrolling is enabled
ScrollFrame.ElasticBehavior = Enum.ElasticBehavior.Always -- Smooth elastic scrolling
ScrollFrame.Parent = FeaturesFrame

-- Create UIListLayout for organized content
local ListLayout = Instance.new("UIListLayout")
ListLayout.Padding = UDim.new(0, 10)
ListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
ListLayout.Parent = ScrollFrame

-- Section: Position Saving
local PositionSection = Instance.new("Frame")
PositionSection.Name = "PositionSection"
PositionSection.Size = UDim2.new(0.95, 0, 0, 100)
PositionSection.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
PositionSection.BorderSizePixel = 0
PositionSection.Parent = ScrollFrame

-- Add UICorner for position section
local PositionSectionCorner = Instance.new("UICorner")
PositionSectionCorner.CornerRadius = UDim.new(0, 8)
PositionSectionCorner.Parent = PositionSection

local PositionTitle = Instance.new("TextLabel")
PositionTitle.Name = "PositionTitle"
PositionTitle.Size = UDim2.new(1, 0, 0, 30)
PositionTitle.BackgroundTransparency = 1
PositionTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
PositionTitle.TextSize = 16
PositionTitle.Font = Enum.Font.SourceSansBold
PositionTitle.Text = "Position Controls"
PositionTitle.Parent = PositionSection

local SavePositionButton = Instance.new("TextButton")
SavePositionButton.Name = "SavePositionButton"
SavePositionButton.Size = UDim2.new(0.45, 0, 0, 35)
SavePositionButton.Position = UDim2.new(0.05, 0, 0, 40)
SavePositionButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
SavePositionButton.BorderSizePixel = 0
SavePositionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SavePositionButton.TextSize = 14
SavePositionButton.Font = Enum.Font.SourceSansBold
SavePositionButton.Text = "Save Position"
SavePositionButton.Parent = PositionSection

-- Add UICorner for save position button
local SavePositionCorner = Instance.new("UICorner")
SavePositionCorner.CornerRadius = UDim.new(0, 6)
SavePositionCorner.Parent = SavePositionButton

local TeleportToSavedButton = Instance.new("TextButton")
TeleportToSavedButton.Name = "TeleportToSavedButton"
TeleportToSavedButton.Size = UDim2.new(0.45, 0, 0, 35)
TeleportToSavedButton.Position = UDim2.new(0.5, 0, 0, 40)
TeleportToSavedButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
TeleportToSavedButton.BorderSizePixel = 0
TeleportToSavedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TeleportToSavedButton.TextSize = 14
TeleportToSavedButton.Font = Enum.Font.SourceSansBold
TeleportToSavedButton.Text = "Teleport to Saved"
TeleportToSavedButton.Parent = PositionSection

-- Add UICorner for teleport to saved button
local TeleportToSavedCorner = Instance.new("UICorner")
TeleportToSavedCorner.CornerRadius = UDim.new(0, 6)
TeleportToSavedCorner.Parent = TeleportToSavedButton

-- Section: Player Targeting
local TargetSection = Instance.new("Frame")
TargetSection.Name = "TargetSection"
TargetSection.Size = UDim2.new(0.95, 0, 0, 160) -- Increased height for more buttons
TargetSection.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TargetSection.BorderSizePixel = 0
TargetSection.Parent = ScrollFrame

-- Add UICorner for target section
local TargetSectionCorner = Instance.new("UICorner")
TargetSectionCorner.CornerRadius = UDim.new(0, 8)
TargetSectionCorner.Parent = TargetSection

local TargetTitle = Instance.new("TextLabel")
TargetTitle.Name = "TargetTitle"
TargetTitle.Size = UDim2.new(1, 0, 0, 30)
TargetTitle.BackgroundTransparency = 1
TargetTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
TargetTitle.TextSize = 16
TargetTitle.Font = Enum.Font.SourceSansBold
TargetTitle.Text = "Target Selection"
TargetTitle.Parent = TargetSection

-- Target Info Display
local TargetInfoDisplay = Instance.new("TextLabel")
TargetInfoDisplay.Name = "TargetInfoDisplay"
TargetInfoDisplay.Size = UDim2.new(0.9, 0, 0, 25)
TargetInfoDisplay.Position = UDim2.new(0.05, 0, 0, 30)
TargetInfoDisplay.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TargetInfoDisplay.BorderSizePixel = 0
TargetInfoDisplay.TextColor3 = Color3.fromRGB(255, 255, 255)
TargetInfoDisplay.TextSize = 14
TargetInfoDisplay.Font = Enum.Font.SourceSans
TargetInfoDisplay.Text = "No Target Selected"
TargetInfoDisplay.Parent = TargetSection

-- Add UICorner for target info display
local TargetInfoDisplayCorner = Instance.new("UICorner")
TargetInfoDisplayCorner.CornerRadius = UDim.new(0, 6)
TargetInfoDisplayCorner.Parent = TargetInfoDisplay

local NearestPlayerButton = Instance.new("TextButton")
NearestPlayerButton.Name = "NearestPlayerButton"
NearestPlayerButton.Size = UDim2.new(0.9, 0, 0, 30)
NearestPlayerButton.Position = UDim2.new(0.05, 0, 0, 65)
NearestPlayerButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
NearestPlayerButton.BorderSizePixel = 0
NearestPlayerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
NearestPlayerButton.TextSize = 14
NearestPlayerButton.Font = Enum.Font.SourceSansBold
NearestPlayerButton.Text = "Select Nearest Player"
NearestPlayerButton.Parent = TargetSection

-- Add UICorner for nearest player button
local NearestPlayerCorner = Instance.new("UICorner")
NearestPlayerCorner.CornerRadius = UDim.new(0, 6)
NearestPlayerCorner.Parent = NearestPlayerButton

local TargetDropdown = Instance.new("TextButton")
TargetDropdown.Name = "TargetDropdown"
TargetDropdown.Size = UDim2.new(0.6, 0, 0, 30)
TargetDropdown.Position = UDim2.new(0.05, 0, 0, 105)
TargetDropdown.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TargetDropdown.BorderSizePixel = 0
TargetDropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
TargetDropdown.TextSize = 14
TargetDropdown.Font = Enum.Font.SourceSans
TargetDropdown.Text = "Select Target"
TargetDropdown.Parent = TargetSection

-- Add UICorner for target dropdown
local TargetDropdownCorner = Instance.new("UICorner")
TargetDropdownCorner.CornerRadius = UDim.new(0, 6)
TargetDropdownCorner.Parent = TargetDropdown

local ReloadButton = Instance.new("TextButton")
ReloadButton.Name = "ReloadButton"
ReloadButton.Size = UDim2.new(0.25, 0, 0, 30)
ReloadButton.Position = UDim2.new(0.7, 0, 0, 105)
ReloadButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ReloadButton.BorderSizePixel = 0
ReloadButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ReloadButton.TextSize = 14
ReloadButton.Font = Enum.Font.SourceSans
ReloadButton.Text = "Reload"
ReloadButton.Parent = TargetSection

-- Add UICorner for reload button
local ReloadCorner = Instance.new("UICorner")
ReloadCorner.CornerRadius = UDim.new(0, 6)
ReloadCorner.Parent = ReloadButton

-- View Target Button
local ViewTargetButton = Instance.new("TextButton")
ViewTargetButton.Name = "ViewTargetButton"
ViewTargetButton.Size = UDim2.new(0.45, 0, 0, 35)
ViewTargetButton.Position = UDim2.new(0.05, 0, 0, 145)
ViewTargetButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
ViewTargetButton.BorderSizePixel = 0
ViewTargetButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ViewTargetButton.TextSize = 14
ViewTargetButton.Font = Enum.Font.SourceSansBold
ViewTargetButton.Text = "View Target: OFF"
ViewTargetButton.Parent = TargetSection

-- Add UICorner for view target button
local ViewTargetCorner = Instance.new("UICorner")
ViewTargetCorner.CornerRadius = UDim.new(0, 6)
ViewTargetCorner.Parent = ViewTargetButton

local FollowButton = Instance.new("TextButton")
FollowButton.Name = "FollowButton"
FollowButton.Size = UDim2.new(0.45, 0, 0, 35)
FollowButton.Position = UDim2.new(0.5, 0, 0, 145)
FollowButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
FollowButton.BorderSizePixel = 0
FollowButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FollowButton.TextSize = 14
FollowButton.Font = Enum.Font.SourceSansBold
FollowButton.Text = "Follow: OFF"
FollowButton.Parent = TargetSection

-- Add UICorner for follow button
local FollowCorner = Instance.new("UICorner")
FollowCorner.CornerRadius = UDim.new(0, 6)
FollowCorner.Parent = FollowButton

local NextButton = Instance.new("TextButton")
NextButton.Name = "NextButton"
NextButton.Size = UDim2.new(0.45, 0, 0, 35)
NextButton.Position = UDim2.new(0.5, 0, 0, 190)
NextButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
NextButton.BorderSizePixel = 0
NextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
NextButton.TextSize = 14
NextButton.Font = Enum.Font.SourceSansBold
NextButton.Text = "Auto Next: OFF"
NextButton.Parent = TargetSection

-- Add UICorner for next button
local NextCorner = Instance.new("UICorner")
NextCorner.CornerRadius = UDim.new(0, 6)
NextCorner.Parent = NextButton

-- Auto Disable on Target Death Checkbox
local AutoDisableCheck = Instance.new("Frame")
AutoDisableCheck.Name = "AutoDisableCheck"
AutoDisableCheck.Size = UDim2.new(0.05, 0, 0, 20)
AutoDisableCheck.Position = UDim2.new(0.05, 0, 0, 197.5)
AutoDisableCheck.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
AutoDisableCheck.BorderSizePixel = 0
AutoDisableCheck.Parent = TargetSection

-- Add UICorner for auto disable check
local AutoDisableCheckCorner = Instance.new("UICorner")
AutoDisableCheckCorner.CornerRadius = UDim.new(0, 4)
AutoDisableCheckCorner.Parent = AutoDisableCheck

local AutoDisableLabel = Instance.new("TextLabel")
AutoDisableLabel.Name = "AutoDisableLabel"
AutoDisableLabel.Size = UDim2.new(0.35, 0, 0, 35)
AutoDisableLabel.Position = UDim2.new(0.15, 0, 0, 190)
AutoDisableLabel.BackgroundTransparency = 1
AutoDisableLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoDisableLabel.TextSize = 14
AutoDisableLabel.Font = Enum.Font.SourceSans
AutoDisableLabel.Text = "Auto Disable on Death"
AutoDisableLabel.TextXAlignment = Enum.TextXAlignment.Left
AutoDisableLabel.Parent = TargetSection

-- Dropdown Frame for player selection
local DropdownFrame = Instance.new("Frame")
DropdownFrame.Name = "DropdownFrame"
DropdownFrame.Size = UDim2.new(0.6, 0, 0, 200) -- Increased height for more players
DropdownFrame.Position = UDim2.new(0.05, 0, 0, 135)
DropdownFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
DropdownFrame.BorderSizePixel = 0
DropdownFrame.Visible = false
DropdownFrame.ZIndex = 10
DropdownFrame.Parent = TargetSection

-- Add UICorner for dropdown frame
local DropdownFrameCorner = Instance.new("UICorner")
DropdownFrameCorner.CornerRadius = UDim.new(0, 6)
DropdownFrameCorner.Parent = DropdownFrame

-- ScrollingFrame for player list with improved scrolling
local PlayerScrollFrame = Instance.new("ScrollingFrame")
PlayerScrollFrame.Name = "PlayerScrollFrame"
PlayerScrollFrame.Size = UDim2.new(1, -10, 1, -10)
PlayerScrollFrame.Position = UDim2.new(0, 5, 0, 5)
PlayerScrollFrame.BackgroundTransparency = 1  -10, 1, -10)
PlayerScrollFrame.Position = UDim2.new(0, 5, 0, 5)
PlayerScrollFrame.BackgroundTransparency = 1
PlayerScrollFrame.BorderSizePixel = 0
PlayerScrollFrame.ScrollBarThickness = 4
PlayerScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Will adjust based on content
PlayerScrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y -- Automatically adjust canvas size
PlayerScrollFrame.ScrollingDirection = Enum.ScrollingDirection.Y -- Only allow vertical scrolling
PlayerScrollFrame.ScrollingEnabled = true -- Ensure scrolling is enabled
PlayerScrollFrame.ElasticBehavior = Enum.ElasticBehavior.Always -- Smooth elastic scrolling
PlayerScrollFrame.ZIndex = 11
PlayerScrollFrame.Parent = DropdownFrame

-- UIListLayout for player list
local PlayerListLayout = Instance.new("UIListLayout")
PlayerListLayout.Padding = UDim.new(0, 5)
PlayerListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
PlayerListLayout.Parent = PlayerScrollFrame

-- Section: ESP Features
local ESPSection = Instance.new("Frame")
ESPSection.Name = "ESPSection"
ESPSection.Size = UDim2.new(0.95, 0, 0, 150)
ESPSection.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
ESPSection.BorderSizePixel = 0
ESPSection.Parent = ScrollFrame

-- Add UICorner for ESP section
local ESPSectionCorner = Instance.new("UICorner")
ESPSectionCorner.CornerRadius = UDim.new(0, 8)
ESPSectionCorner.Parent = ESPSection

local ESPTitle = Instance.new("TextLabel")
ESPTitle.Name = "ESPTitle"
ESPTitle.Size = UDim2.new(1, 0, 0, 30)
ESPTitle.BackgroundTransparency = 1
ESPTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
ESPTitle.TextSize = 16
ESPTitle.Font = Enum.Font.SourceSansBold
ESPTitle.Text = "ESP Features"
ESPTitle.Parent = ESPSection

-- ESP Name Button
local ESPNameButton = Instance.new("TextButton")
ESPNameButton.Name = "ESPNameButton"
ESPNameButton.Size = UDim2.new(0.45, 0, 0, 35)
ESPNameButton.Position = UDim2.new(0.05, 0, 0, 40)
ESPNameButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
ESPNameButton.BorderSizePixel = 0
ESPNameButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ESPNameButton.TextSize = 14
ESPNameButton.Font = Enum.Font.SourceSansBold
ESPNameButton.Text = "ESP Name: OFF"
ESPNameButton.Parent = ESPSection

-- Add UICorner for ESP name button
local ESPNameCorner = Instance.new("UICorner")
ESPNameCorner.CornerRadius = UDim.new(0, 6)
ESPNameCorner.Parent = ESPNameButton

-- Hitbox Button
local HitboxButton = Instance.new("TextButton")
HitboxButton.Name = "HitboxButton"
HitboxButton.Size = UDim2.new(0.45, 0, 0, 35)
HitboxButton.Position = UDim2.new(0.5, 0, 0, 40)
HitboxButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
HitboxButton.BorderSizePixel = 0
HitboxButton.TextColor3 = Color3.fromRGB(255, 255, 255)
HitboxButton.TextSize = 14
HitboxButton.Font = Enum.Font.SourceSansBold
HitboxButton.Text = "Hitbox: OFF"
HitboxButton.Parent = ESPSection

-- Add UICorner for hitbox button
local HitboxCorner = Instance.new("UICorner")
HitboxCorner.CornerRadius = UDim.new(0, 6)
HitboxCorner.Parent = HitboxButton

-- Glow Button
local GlowButton = Instance.new("TextButton")
GlowButton.Name = "GlowButton"
GlowButton.Size = UDim2.new(0.45, 0, 0, 35)
GlowButton.Position = UDim2.new(0.05, 0, 0, 85)
GlowButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
GlowButton.BorderSizePixel = 0
GlowButton.TextColor3 = Color3.fromRGB(255, 255, 255)
GlowButton.TextSize = 14
GlowButton.Font = Enum.Font.SourceSansBold
GlowButton.Text = "Glow: OFF"
GlowButton.Parent = ESPSection

-- Add UICorner for glow button
local GlowCorner = Instance.new("UICorner")
GlowCorner.CornerRadius = UDim.new(0, 6)
GlowCorner.Parent = GlowButton

-- ESP HP Button
local ESPHPButton = Instance.new("TextButton")
ESPHPButton.Name = "ESPHPButton"
ESPHPButton.Size = UDim2.new(0.45, 0, 0, 35)
ESPHPButton.Position = UDim2.new(0.5, 0, 0, 85)
ESPHPButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
ESPHPButton.BorderSizePixel = 0
ESPHPButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ESPHPButton.TextSize = 14
ESPHPButton.Font = Enum.Font.SourceSansBold
ESPHPButton.Text = "ESP HP: OFF"
ESPHPButton.Parent = ESPSection

-- Add UICorner for ESP HP button
local ESPHPCorner = Instance.new("UICorner")
ESPHPCorner.CornerRadius = UDim.new(0, 6)
ESPHPCorner.Parent = ESPHPButton

-- ESP Position Button
local ESPPositionButton = Instance.new("TextButton")
ESPPositionButton.Name = "ESPPositionButton"
ESPPositionButton.Size = UDim2.new(0.9, 0, 0, 35)
ESPPositionButton.Position = UDim2.new(0.05, 0, 0, 130)
ESPPositionButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
ESPPositionButton.BorderSizePixel = 0
ESPPositionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ESPPositionButton.TextSize = 14
ESPPositionButton.Font = Enum.Font.SourceSansBold
ESPPositionButton.Text = "ESP Position: OFF"
ESPPositionButton.Parent = ESPSection

-- Add UICorner for ESP position button
local ESPPositionCorner = Instance.new("UICorner")
ESPPositionCorner.CornerRadius = UDim.new(0, 6)
ESPPositionCorner.Parent = ESPPositionButton

-- Section: Distance Controls
local DistanceSection = Instance.new("Frame")
DistanceSection.Name = "DistanceSection"
DistanceSection.Size = UDim2.new(0.95, 0, 0, 150)
DistanceSection.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
DistanceSection.BorderSizePixel = 0
DistanceSection.Parent = ScrollFrame

-- Add UICorner for distance section
local DistanceSectionCorner = Instance.new("UICorner")
DistanceSectionCorner.CornerRadius = UDim.new(0, 8)
DistanceSectionCorner.Parent = DistanceSection

local DistanceTitle = Instance.new("TextLabel")
DistanceTitle.Name = "DistanceTitle"
DistanceTitle.Size = UDim2.new(1, 0, 0, 30)
DistanceTitle.BackgroundTransparency = 1
DistanceTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
DistanceTitle.TextSize = 16
DistanceTitle.Font = Enum.Font.SourceSansBold
DistanceTitle.Text = "Distance Controls"
DistanceTitle.Parent = DistanceSection

-- Horizontal Distance Controls
local HorizontalLabel = Instance.new("TextLabel")
HorizontalLabel.Name = "HorizontalLabel"
HorizontalLabel.Size = UDim2.new(0.4, 0, 0, 25)
HorizontalLabel.Position = UDim2.new(0.05, 0, 0, 35)
HorizontalLabel.BackgroundTransparency = 1
HorizontalLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
HorizontalLabel.TextSize = 14
HorizontalLabel.Font = Enum.Font.SourceSans
HorizontalLabel.Text = "Behind:"
HorizontalLabel.TextXAlignment = Enum.TextXAlignment.Left
HorizontalLabel.Parent = DistanceSection

local HorizontalInput = Instance.new("TextBox")
HorizontalInput.Name = "HorizontalInput"
HorizontalInput.Size = UDim2.new(0.2, 0, 0, 25)
HorizontalInput.Position = UDim2.new(0.45, 0, 0, 35)
HorizontalInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
HorizontalInput.BorderSizePixel = 0
HorizontalInput.TextColor3 = Color3.fromRGB(255, 255, 255)
HorizontalInput.TextSize = 14
HorizontalInput.Font = Enum.Font.SourceSans
HorizontalInput.Text = "5"
HorizontalInput.Parent = DistanceSection

-- Add UICorner for horizontal input
local HorizontalInputCorner = Instance.new("UICorner")
HorizontalInputCorner.CornerRadius = UDim.new(0, 6)
HorizontalInputCorner.Parent = HorizontalInput

local HorizontalPlus = Instance.new("TextButton")
HorizontalPlus.Name = "HorizontalPlus"
HorizontalPlus.Size = UDim2.new(0.1, 0, 0, 25)
HorizontalPlus.Position = UDim2.new(0.7, 0, 0, 35)
HorizontalPlus.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
HorizontalPlus.BorderSizePixel = 0
HorizontalPlus.TextColor3 = Color3.fromRGB(255, 255, 255)
HorizontalPlus.TextSize = 14
HorizontalPlus.Font = Enum.Font.SourceSansBold
HorizontalPlus.Text = "+"
HorizontalPlus.Parent = DistanceSection

-- Add UICorner for horizontal plus
local HorizontalPlusCorner = Instance.new("UICorner")
HorizontalPlusCorner.CornerRadius = UDim.new(0, 6)
HorizontalPlusCorner.Parent = HorizontalPlus

local HorizontalMinus = Instance.new("TextButton")
HorizontalMinus.Name = "HorizontalMinus"
HorizontalMinus.Size = UDim2.new(0.1, 0, 0, 25)
HorizontalMinus.Position = UDim2.new(0.85, 0, 0, 35)
HorizontalMinus.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
HorizontalMinus.BorderSizePixel = 0
HorizontalMinus.TextColor3 = Color3.fromRGB(255, 255, 255)
HorizontalMinus.TextSize = 14
HorizontalMinus.Font = Enum.Font.SourceSansBold
HorizontalMinus.Text = "-"
HorizontalMinus.Parent = DistanceSection

-- Add UICorner for horizontal minus
local HorizontalMinusCorner = Instance.new("UICorner")
HorizontalMinusCorner.CornerRadius = UDim.new(0, 6)
HorizontalMinusCorner.Parent = HorizontalMinus

-- Vertical Distance Controls
local VerticalLabel = Instance.new("TextLabel")
VerticalLabel.Name = "VerticalLabel"
VerticalLabel.Size = UDim2.new(0.4, 0, 0, 25)
VerticalLabel.Position = UDim2.new(0.05, 0, 0, 70)
VerticalLabel.BackgroundTransparency = 1
VerticalLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
VerticalLabel.TextSize = 14
VerticalLabel.Font = Enum.Font.SourceSans
VerticalLabel.Text = "Above:"
VerticalLabel.TextXAlignment = Enum.TextXAlignment.Left
VerticalLabel.Parent = DistanceSection

local VerticalInput = Instance.new("TextBox")
VerticalInput.Name = "VerticalInput"
VerticalInput.Size = UDim2.new(0.2, 0, 0, 25)
VerticalInput.Position = UDim2.new(0.45, 0, 0, 70)
VerticalInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
VerticalInput.BorderSizePixel = 0
VerticalInput.TextColor3 = Color3.fromRGB(255, 255, 255)
VerticalInput.TextSize = 14
VerticalInput.Font = Enum.Font.SourceSans
VerticalInput.Text = "0"
VerticalInput.Parent = DistanceSection

-- Add UICorner for vertical input
local VerticalInputCorner = Instance.new("UICorner")
VerticalInputCorner.CornerRadius = UDim.new(0, 6)
VerticalInputCorner.Parent = VerticalInput

local VerticalPlus = Instance.new("TextButton")
VerticalPlus.Name = "VerticalPlus"
VerticalPlus.Size = UDim2.new(0.1, 0, 0, 25)
VerticalPlus.Position = UDim2.new(0.7, 0, 0, 70)
VerticalPlus.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
VerticalPlus.BorderSizePixel = 0
VerticalPlus.TextColor3 = Color3.fromRGB(255, 255, 255)
VerticalPlus.TextSize = 14
VerticalPlus.Font = Enum.Font.SourceSansBold
VerticalPlus.Text = "+"
VerticalPlus.Parent = DistanceSection

-- Add UICorner for vertical plus
local VerticalPlusCorner = Instance.new("UICorner")
VerticalPlusCorner.CornerRadius = UDim.new(0, 6)
VerticalPlusCorner.Parent = VerticalPlus

local VerticalMinus = Instance.new("TextButton")
VerticalMinus.Name = "VerticalMinus"
VerticalMinus.Size = UDim2.new(0.1, 0, 0, 25)
VerticalMinus.Position = UDim2.new(0.85, 0, 0, 70)
VerticalMinus.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
VerticalMinus.BorderSizePixel = 0
VerticalMinus.TextColor3 = Color3.fromRGB(255, 255, 255)
VerticalMinus.TextSize = 14
VerticalMinus.Font = Enum.Font.SourceSansBold
VerticalMinus.Text = "-"
VerticalMinus.Parent = DistanceSection

-- Add UICorner for vertical minus
local VerticalMinusCorner = Instance.new("UICorner")
VerticalMinusCorner.CornerRadius = UDim.new(0, 6)
VerticalMinusCorner.Parent = VerticalMinus

-- Detection Radius Controls
local RadiusLabel = Instance.new("TextLabel")
RadiusLabel.Name = "RadiusLabel"
RadiusLabel.Size = UDim2.new(0.4, 0, 0, 25)
RadiusLabel.Position = UDim2.new(0.05, 0, 0, 105)
RadiusLabel.BackgroundTransparency = 1
RadiusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
RadiusLabel.TextSize = 14
RadiusLabel.Font = Enum.Font.SourceSans
RadiusLabel.Text = "Detection Radius:"
RadiusLabel.TextXAlignment = Enum.TextXAlignment.Left
RadiusLabel.Parent = DistanceSection

local RadiusInput = Instance.new("TextBox")
RadiusInput.Name = "RadiusInput"
RadiusInput.Size = UDim2.new(0.2, 0, 0, 25)
RadiusInput.Position = UDim2.new(0.45, 0, 0, 105)
RadiusInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
RadiusInput.BorderSizePixel = 0
RadiusInput.TextColor3 = Color3.fromRGB(255, 255, 255)
RadiusInput.TextSize = 14
RadiusInput.Font = Enum.Font.SourceSans
RadiusInput.Text = "20"
RadiusInput.Parent = DistanceSection

-- Add UICorner for radius input
local RadiusInputCorner = Instance.new("UICorner")
RadiusInputCorner.CornerRadius = UDim.new(0, 6)
RadiusInputCorner.Parent = RadiusInput

local RadiusPlus = Instance.new("TextButton")
RadiusPlus.Name = "RadiusPlus"
RadiusPlus.Size = UDim2.new(0.1, 0, 0, 25)
RadiusPlus.Position = UDim2.new(0.7, 0, 0, 105)
RadiusPlus.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
RadiusPlus.BorderSizePixel = 0
RadiusPlus.TextColor3 = Color3.fromRGB(255, 255, 255)
RadiusPlus.TextSize = 14
RadiusPlus.Font = Enum.Font.SourceSansBold
RadiusPlus.Text = "+"
RadiusPlus.Parent = DistanceSection

-- Add UICorner for radius plus
local RadiusPlusCorner = Instance.new("UICorner")
RadiusPlusCorner.CornerRadius = UDim.new(0, 6)
RadiusPlusCorner.Parent = RadiusPlus

local RadiusMinus = Instance.new("TextButton")
RadiusMinus.Name = "RadiusMinus"
RadiusMinus.Size = UDim2.new(0.1, 0, 0, 25)
RadiusMinus.Position = UDim2.new(0.85, 0, 0, 105)
RadiusMinus.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
RadiusMinus.BorderSizePixel = 0
RadiusMinus.TextColor3 = Color3.fromRGB(255, 255, 255)
RadiusMinus.TextSize = 14
RadiusMinus.Font = Enum.Font.SourceSansBold
RadiusMinus.Text = "-"
RadiusMinus.Parent = DistanceSection

-- Add UICorner for radius minus
local RadiusMinusCorner = Instance.new("UICorner")
RadiusMinusCorner.CornerRadius = UDim.new(0, 6)
RadiusMinusCorner.Parent = RadiusMinus

-- Section: Feature Buttons
local FeaturesButtonSection = Instance.new("Frame")
FeaturesButtonSection.Name = "FeaturesButtonSection"
FeaturesButtonSection.Size = UDim2.new(0.95, 0, 0, 180)
FeaturesButtonSection.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
FeaturesButtonSection.BorderSizePixel = 0
FeaturesButtonSection.Parent = ScrollFrame

-- Add UICorner for features button section
local FeaturesButtonSectionCorner = Instance.new("UICorner")
FeaturesButtonSectionCorner.CornerRadius = UDim.new(0, 8)
FeaturesButtonSectionCorner.Parent = FeaturesButtonSection

local FeaturesTitle = Instance.new("TextLabel")
FeaturesTitle.Name = "FeaturesTitle"
FeaturesTitle.Size = UDim2.new(1, 0, 0, 30)
FeaturesTitle.BackgroundTransparency = 1
FeaturesTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
FeaturesTitle.TextSize = 16
FeaturesTitle.Font = Enum.Font.SourceSansBold
FeaturesTitle.Text = "Features"
FeaturesTitle.Parent = FeaturesButtonSection

-- Noclip Button
local NoclipButton = Instance.new("TextButton")
NoclipButton.Name = "NoclipButton"
NoclipButton.Size = UDim2.new(0.45, 0, 0, 35)
NoclipButton.Position = UDim2.new(0.05, 0, 0, 35)
NoclipButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
NoclipButton.BorderSizePixel = 0
NoclipButton.TextColor3 = Color3.fromRGB(255, 255, 255)
NoclipButton.TextSize = 14
NoclipButton.Font = Enum.Font.SourceSansBold
NoclipButton.Text = "Noclip: OFF"
NoclipButton.Parent = FeaturesButtonSection

-- Add UICorner for noclip button
local NoclipCorner = Instance.new("UICorner")
NoclipCorner.CornerRadius = UDim.new(0, 6)
NoclipCorner.Parent = NoclipButton

-- Platform Button
local PlatformButton = Instance.new("TextButton")
PlatformButton.Name = "PlatformButton"
PlatformButton.Size = UDim2.new(0.45, 0, 0, 35)
PlatformButton.Position = UDim2.new(0.5, 0, 0, 35)
PlatformButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
PlatformButton.BorderSizePixel = 0
PlatformButton.TextColor3 = Color3.fromRGB(255, 255, 255)
PlatformButton.TextSize = 14
PlatformButton.Font = Enum.Font.SourceSansBold
PlatformButton.Text = "Platform: OFF"
PlatformButton.Parent = FeaturesButtonSection

-- Add UICorner for platform button
local PlatformCorner = Instance.new("UICorner")
PlatformCorner.CornerRadius = UDim.new(0, 6)
PlatformCorner.Parent = PlatformButton

-- Run Button
local RunButton = Instance.new("TextButton")
RunButton.Name = "RunButton"
RunButton.Size = UDim2.new(0.45, 0, 0, 35)
RunButton.Position = UDim2.new(0.05, 0, 0, 80)
RunButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
RunButton.BorderSizePixel = 0
RunButton.TextColor3 = Color3.fromRGB(255, 255, 255)
RunButton.TextSize = 14
RunButton.Font = Enum.Font.SourceSansBold
RunButton.Text = "Run Away: OFF"
RunButton.Parent = FeaturesButtonSection

-- Add UICorner for run button
local RunCorner = Instance.new("UICorner")
RunCorner.CornerRadius = UDim.new(0, 6)
RunCorner.Parent = RunButton

-- Auto Run Button
local AutoRunButton = Instance.new("TextButton")
AutoRunButton.Name = "AutoRunButton"
AutoRunButton.Size = UDim2.new(0.45, 0, 0, 35)
AutoRunButton.Position = UDim2.new(0.5, 0, 0, 80)
AutoRunButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
AutoRunButton.BorderSizePixel = 0
AutoRunButton.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoRunButton.TextSize = 14
AutoRunButton.Font = Enum.Font.SourceSansBold
AutoRunButton.Text = "Auto Run: OFF"
AutoRunButton.Parent = FeaturesButtonSection

-- Add UICorner for auto run button
local AutoRunCorner = Instance.new("UICorner")
AutoRunCorner.CornerRadius = UDim.new(0, 6)
AutoRunCorner.Parent = AutoRunButton

-- Auto Next Checkbox
local AutoNextCheck = Instance.new("Frame")
AutoNextCheck.Name = "AutoNextCheck"
AutoNextCheck.Size = UDim2.new(0.05, 0, 0, 20)
AutoNextCheck.Position = UDim2.new(0.05, 0, 0, 132.5)
AutoNextCheck.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
AutoNextCheck.BorderSizePixel = 0
AutoNextCheck.Parent = FeaturesButtonSection

-- Add UICorner for auto next check
local AutoNextCheckCorner = Instance.new("UICorner")
AutoNextCheckCorner.CornerRadius = UDim.new(0, 4)
AutoNextCheckCorner.Parent = AutoNextCheck

local AutoNextLabel = Instance.new("TextLabel")
AutoNextLabel.Name = "AutoNextLabel"
AutoNextLabel.Size = UDim2.new(0.35, 0, 0, 35)
AutoNextLabel.Position = UDim2.new(0.15, 0, 0, 125)
AutoNextLabel.BackgroundTransparency = 1
AutoNextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoNextLabel.TextSize = 14
AutoNextLabel.Font = Enum.Font.SourceSans
AutoNextLabel.Text = "Auto Next Target"
AutoNextLabel.TextXAlignment = Enum.TextXAlignment.Left
AutoNextLabel.Parent = FeaturesButtonSection

-- Auto Platform Checkbox
local AutoPlatformCheck = Instance.new("Frame")
AutoPlatformCheck.Name = "AutoPlatformCheck"
AutoPlatformCheck.Size = UDim2.new(0.05, 0, 0, 20)
AutoPlatformCheck.Position = UDim2.new(0.5, 0, 0, 132.5)
AutoPlatformCheck.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
AutoPlatformCheck.BorderSizePixel = 0
AutoPlatformCheck.Parent = FeaturesButtonSection

-- Add UICorner for auto platform check
local AutoPlatformCheckCorner = Instance.new("UICorner")
AutoPlatformCheckCorner.CornerRadius = UDim.new(0, 4)
AutoPlatformCheckCorner.Parent = AutoPlatformCheck

local AutoPlatformLabel = Instance.new("TextLabel")
AutoPlatformLabel.Name = "AutoPlatformLabel"
AutoPlatformLabel.Size = UDim2.new(0.35, 0, 0, 35)
AutoPlatformLabel.Position = UDim2.new(0.6, 0, 0, 125)
AutoPlatformLabel.BackgroundTransparency = 1
AutoPlatformLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoPlatformLabel.TextSize = 14
AutoPlatformLabel.Font = Enum.Font.SourceSans
AutoPlatformLabel.Text = "Auto Platform"
AutoPlatformLabel.TextXAlignment = Enum.TextXAlignment.Left
AutoPlatformLabel.Parent = FeaturesButtonSection

-- Expiration Info
local ExpirationSection = Instance.new("Frame")
ExpirationSection.Name = "ExpirationSection"
ExpirationSection.Size = UDim2.new(0.95, 0, 0, 50)
ExpirationSection.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
ExpirationSection.BorderSizePixel = 0
ExpirationSection.Parent = ScrollFrame

-- Add UICorner for expiration section
local ExpirationSectionCorner = Instance.new("UICorner")
ExpirationSectionCorner.CornerRadius = UDim.new(0, 8)
ExpirationSectionCorner.Parent = ExpirationSection

local ExpirationLabel = Instance.new("TextLabel")
ExpirationLabel.Name = "ExpirationLabel"
ExpirationLabel.Size = UDim2.new(1, 0, 1, 0)
ExpirationLabel.BackgroundTransparency = 1
ExpirationLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
ExpirationLabel.TextSize = 14
ExpirationLabel.Font = Enum.Font.SourceSans
ExpirationLabel.Text = "Expires: Loading..."
ExpirationLabel.Parent = ExpirationSection

-- Expired Frame (Hidden until expired)
local ExpiredFrame = Instance.new("Frame")
ExpiredFrame.Name = "ExpiredFrame"
ExpiredFrame.Size = UDim2.new(1, 0, 1, 0)
ExpiredFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ExpiredFrame.BorderSizePixel = 0
ExpiredFrame.Visible = false
ExpiredFrame.Parent = ContentFrame

local ExpiredLabel = Instance.new("TextLabel")
ExpiredLabel.Name = "ExpiredLabel"
ExpiredLabel.Size = UDim2.new(1, 0, 0, 40)
ExpiredLabel.Position = UDim2.new(0, 0, 0.3, 0)
ExpiredLabel.BackgroundTransparency = 1
ExpiredLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
ExpiredLabel.TextSize = 20
ExpiredLabel.Font = Enum.Font.SourceSansBold
ExpiredLabel.Text = "Script Roblox n√†y ƒë√£ h·∫øt th·ªùi gian s·ª≠ d·ª•ng"
ExpiredLabel.Parent = ExpiredFrame

local DeleteButton = Instance.new("TextButton")
DeleteButton.Name = "DeleteButton"
DeleteButton.Size = UDim2.new(0.6, 0, 0, 40)
DeleteButton.Position = UDim2.new(0.2, 0, 0.5, 0)
DeleteButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
DeleteButton.BorderSizePixel = 0
DeleteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DeleteButton.TextSize = 16
DeleteButton.Font = Enum.Font.SourceSansBold
DeleteButton.Text = "X√≥a Script"
DeleteButton.Parent = ExpiredFrame

-- Add UICorner for delete button
local DeleteCorner = Instance.new("UICorner")
DeleteCorner.CornerRadius = UDim.new(0, 8)
DeleteCorner.Parent = DeleteButton

-- Icon for minimized state
local MinimizedIcon = Instance.new("ImageButton")
MinimizedIcon.Name = "MinimizedIcon"
MinimizedIcon.Size = UDim2.new(0, 50, 0, 50)
MinimizedIcon.Position = UDim2.new(0, 10, 0, 10)
MinimizedIcon.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
MinimizedIcon.BorderSizePixel = 0
MinimizedIcon.Image = "rbxassetid://6034684949" -- Keep original flame icon
MinimizedIcon.Visible = false
MinimizedIcon.Active = true -- Enable interaction
MinimizedIcon.Draggable = true -- Enable built-in dragging
MinimizedIcon.Parent = ScreenGui

-- Add UICorner for minimized icon
local MinimizedIconCorner = Instance.new("UICorner")
MinimizedIconCorner.CornerRadius = UDim.new(0, 8)
MinimizedIconCorner.Parent = MinimizedIcon

-- Add UIStroke for minimized icon
local MinimizedIconStroke = Instance.new("UIStroke")
MinimizedIconStroke.Thickness = 2
MinimizedIconStroke.Color = Color3.fromRGB(255, 0, 0)
MinimizedIconStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
MinimizedIconStroke.Parent = MinimizedIcon

-- SubMenu Frame (Hidden by default)
local SubMenuFrame = Instance.new("Frame")
SubMenuFrame.Name = "SubMenuFrame"
SubMenuFrame.Size = UDim2.new(0, 250, 0, 300)
SubMenuFrame.Position = UDim2.new(0.5, 175, 0.5, -150)
SubMenuFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
SubMenuFrame.BorderSizePixel = 0
SubMenuFrame.Visible = false
SubMenuFrame.Active = true
SubMenuFrame.Draggable = true -- Enable built-in dragging
SubMenuFrame.Parent = ScreenGui

-- Add UICorner for submenu frame
local SubMenuCorner = Instance.new("UICorner")
SubMenuCorner.CornerRadius = UDim.new(0, 8)
SubMenuCorner.Parent = SubMenuFrame

-- Add UIStroke for submenu frame
local SubMenuStroke = Instance.new("UIStroke")
SubMenuStroke.Thickness = 2
SubMenuStroke.Color = Color3.fromRGB(255, 0, 0)
SubMenuStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
SubMenuStroke.Parent = SubMenuFrame

-- SubMenu Title Bar
local SubMenuTitleBar = Instance.new("Frame")
SubMenuTitleBar.Name = "SubMenuTitleBar"
SubMenuTitleBar.Size = UDim2.new(1, 0, 0, 30)
SubMenuTitleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
SubMenuTitleBar.BorderSizePixel = 0
SubMenuTitleBar.Parent = SubMenuFrame

-- Add UICorner for submenu title bar
local SubMenuTitleCorner = Instance.new("UICorner")
SubMenuTitleCorner.CornerRadius = UDim.new(0, 8)
SubMenuTitleCorner.Parent = SubMenuTitleBar

-- SubMenu Title
local SubMenuTitle = Instance.new("TextLabel")
SubMenuTitle.Name = "SubMenuTitle"
SubMenuTitle.Size = UDim2.new(1, -40, 1, 0)
SubMenuTitle.Position = UDim2.new(0, 10, 0, 0)
SubMenuTitle.BackgroundTransparency = 1
SubMenuTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
SubMenuTitle.TextSize = 16
SubMenuTitle.Font = Enum.Font.SourceSansBold
SubMenuTitle.Text = "Safety Settings"
SubMenuTitle.TextXAlignment = Enum.TextXAlignment.Left
SubMenuTitle.Parent = SubMenuTitleBar

-- SubMenu Close Button
local SubMenuCloseButton = Instance.new("TextButton")
SubMenuCloseButton.Name = "SubMenuCloseButton"
SubMenuCloseButton.Size = UDim2.new(0, 30, 0, 30)
SubMenuCloseButton.Position = UDim2.new(1, -30, 0, 0)
SubMenuCloseButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
SubMenuCloseButton.BorderSizePixel = 0
SubMenuCloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SubMenuCloseButton.TextSize = 16
SubMenuCloseButton.Font = Enum.Font.SourceSansBold
SubMenuCloseButton.Text = "X"
SubMenuCloseButton.Parent = SubMenuTitleBar

-- Add UICorner for submenu close button
local SubMenuCloseCorner = Instance.new("UICorner")
SubMenuCloseCorner.CornerRadius = UDim.new(0, 8)
SubMenuCloseCorner.Parent = SubMenuCloseButton

-- SubMenu Content
local SubMenuContent = Instance.new("Frame")
SubMenuContent.Name = "SubMenuContent"
SubMenuContent.Size = UDim2.new(1, 0, 1, -30)
SubMenuContent.Position = UDim2.new(0, 0, 0, 30)
SubMenuContent.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
SubMenuContent.BorderSizePixel = 0
SubMenuContent.Parent = SubMenuFrame

-- Auto Check Position Toggle
local AutoCheckLabel = Instance.new("TextLabel")
AutoCheckLabel.Name = "AutoCheckLabel"
AutoCheckLabel.Size = UDim2.new(0.7, 0, 0, 30)
AutoCheckLabel.Position = UDim2.new(0.05, 0, 0, 10)
AutoCheckLabel.BackgroundTransparency = 1
AutoCheckLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoCheckLabel.TextSize = 14
AutoCheckLabel.Font = Enum.Font.SourceSansBold
AutoCheckLabel.Text = "Auto Check Position:"
AutoCheckLabel.TextXAlignment = Enum.TextXAlignment.Left
AutoCheckLabel.Parent = SubMenuContent

local AutoCheckButton = Instance.new("TextButton")
AutoCheckButton.Name = "AutoCheckButton"
AutoCheckButton.Size = UDim2.new(0.2, 0, 0, 30)
AutoCheckButton.Position = UDim2.new(0.75, 0, 0, 10)
AutoCheckButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
AutoCheckButton.BorderSizePixel = 0
AutoCheckButton.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoCheckButton.TextSize = 14
AutoCheckButton.Font = Enum.Font.SourceSansBold
AutoCheckButton.Text = "OFF"
AutoCheckButton.Parent = SubMenuContent

-- Add UICorner for auto check button
local AutoCheckCorner = Instance.new("UICorner")
AutoCheckCorner.CornerRadius = UDim.new(0, 6)
AutoCheckCorner.Parent = AutoCheckButton

-- Safe Position Vertical Min
local VerticalMinLabel = Instance.new("TextLabel")
VerticalMinLabel.Name = "VerticalMinLabel"
VerticalMinLabel.Size = UDim2.new(0.5, 0, 0, 30)
VerticalMinLabel.Position = UDim2.new(0.05, 0, 0, 50)
VerticalMinLabel.BackgroundTransparency = 1
VerticalMinLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
VerticalMinLabel.TextSize = 14
VerticalMinLabel.Font = Enum.Font.SourceSans
VerticalMinLabel.Text = "Vertical Min (Y):"
VerticalMinLabel.TextXAlignment = Enum.TextXAlignment.Left
VerticalMinLabel.Parent = SubMenuContent

local VerticalMinInput = Instance.new("TextBox")
VerticalMinInput.Name = "VerticalMinInput"
VerticalMinInput.Size = UDim2.new(0.3, 0, 0, 30)
VerticalMinInput.Position = UDim2.new(0.65, 0, 0, 50)
VerticalMinInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
VerticalMinInput.BorderSizePixel = 0
VerticalMinInput.TextColor3 = Color3.fromRGB(255, 255, 255)
VerticalMinInput.TextSize = 14
VerticalMinInput.Font = Enum.Font.SourceSans
VerticalMinInput.Text = "-1000"
VerticalMinInput.Parent = SubMenuContent

-- Add UICorner for vertical min input
local VerticalMinCorner = Instance.new("UICorner")
VerticalMinCorner.CornerRadius = UDim.new(0, 6)
VerticalMinCorner.Parent = VerticalMinInput

-- Safe Position Vertical Max
local VerticalMaxLabel = Instance.new("TextLabel")
VerticalMaxLabel.Name = "VerticalMaxLabel"
VerticalMaxLabel.Size = UDim2.new(0.5, 0, 0, 30)
VerticalMaxLabel.Position = UDim2.new(0.05, 0, 0, 90)
VerticalMaxLabel.BackgroundTransparency = 1
VerticalMaxLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
VerticalMaxLabel.TextSize = 14
VerticalMaxLabel.Font = Enum.Font.SourceSans
VerticalMaxLabel.Text = "Vertical Max (Y):"
VerticalMaxLabel.TextXAlignment = Enum.TextXAlignment.Left
VerticalMaxLabel.Parent = SubMenuContent

local VerticalMaxInput = Instance.new("TextBox")
VerticalMaxInput.Name = "VerticalMaxInput"
VerticalMaxInput.Size = UDim2.new(0.3, 0, 0, 30)
VerticalMaxInput.Position = UDim2.new(0.65, 0, 0, 90)
VerticalMaxInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
VerticalMaxInput.BorderSizePixel = 0
VerticalMaxInput.TextColor3 = Color3.fromRGB(255, 255, 255)
VerticalMaxInput.TextSize = 14
VerticalMaxInput.Font = Enum.Font.SourceSans
VerticalMaxInput.Text = "1000"
VerticalMaxInput.Parent = SubMenuContent

-- Add UICorner for vertical max input
local VerticalMaxCorner = Instance.new("UICorner")
VerticalMaxCorner.CornerRadius = UDim.new(0, 6)
VerticalMaxCorner.Parent = VerticalMaxInput

-- Safe Position Horizontal Min
local HorizontalMinLabel = Instance.new("TextLabel")
HorizontalMinLabel.Name = "HorizontalMinLabel"
HorizontalMinLabel.Size = UDim2.new(0.5, 0, 0, 30)
HorizontalMinLabel.Position = UDim2.new(0.05, 0, 0, 130)
HorizontalMinLabel.BackgroundTransparency = 1
HorizontalMinLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
HorizontalMinLabel.TextSize = 14
HorizontalMinLabel.Font = Enum.Font.SourceSans
HorizontalMinLabel.Text = "Horizontal Min (X/Z):"
HorizontalMinLabel.TextXAlignment = Enum.TextXAlignment.Left
HorizontalMinLabel.Parent = SubMenuContent

local HorizontalMinInput = Instance.new("TextBox")
HorizontalMinInput.Name = "HorizontalMinInput"
HorizontalMinInput.Size = UDim2.new(0.3, 0, 0, 30)
HorizontalMinInput.Position = UDim2.new(0.65, 0, 0, 130)
HorizontalMinInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
HorizontalMinInput.BorderSizePixel = 0
HorizontalMinInput.TextColor3 = Color3.fromRGB(255, 255, 255)
HorizontalMinInput.TextSize = 14
HorizontalMinInput.Font = Enum.Font.SourceSans
HorizontalMinInput.Text = "-1000"
HorizontalMinInput.Parent = SubMenuContent

-- Add UICorner for horizontal min input
local HorizontalMinCorner = Instance.new("UICorner")
HorizontalMinCorner.CornerRadius = UDim.new(0, 6)
HorizontalMinCorner.Parent = HorizontalMinInput

-- Safe Position Horizontal Max
local HorizontalMaxLabel = Instance.new("TextLabel")
HorizontalMaxLabel.Name = "HorizontalMaxLabel"
HorizontalMaxLabel.Size = UDim2.new(0.5, 0, 0, 30)
HorizontalMaxLabel.Position = UDim2.new(0.05, 0, 0, 170)
HorizontalMaxLabel.BackgroundTransparency = 1
HorizontalMaxLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
HorizontalMaxLabel.TextSize = 14
HorizontalMaxLabel.Font = Enum.Font.SourceSans
HorizontalMaxLabel.Text = "Horizontal Max (X/Z):"
HorizontalMaxLabel.TextXAlignment = Enum.TextXAlignment.Left
HorizontalMaxLabel.Parent = SubMenuContent

local HorizontalMaxInput = Instance.new("TextBox")
HorizontalMaxInput.Name = "HorizontalMaxInput"
HorizontalMaxInput.Size = UDim2.new(0.3, 0, 0, 30)
HorizontalMaxInput.Position = UDim2.new(0.65, 0, 0, 170)
HorizontalMaxInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
HorizontalMaxInput.BorderSizePixel = 0
HorizontalMaxInput.TextColor3 = Color3.fromRGB(255, 255, 255)
HorizontalMaxInput.TextSize = 14
HorizontalMaxInput.Font = Enum.Font.SourceSans
HorizontalMaxInput.Text = "1000"
HorizontalMaxInput.Parent = SubMenuContent

-- Add UICorner for horizontal max input
local HorizontalMaxCorner = Instance.new("UICorner")
HorizontalMaxCorner.CornerRadius = UDim.new(0, 6)
HorizontalMaxCorner.Parent = HorizontalMaxInput

-- Apply Settings Button
local ApplySettingsButton = Instance.new("TextButton")
ApplySettingsButton.Name = "ApplySettingsButton"
ApplySettingsButton.Size = UDim2.new(0.9, 0, 0, 40)
ApplySettingsButton.Position = UDim2.new(0.05, 0, 0, 220)
ApplySettingsButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
ApplySettingsButton.BorderSizePixel = 0
ApplySettingsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ApplySettingsButton.TextSize = 16
ApplySettingsButton.Font = Enum.Font.SourceSansBold
ApplySettingsButton.Text = "Apply Settings"
ApplySettingsButton.Parent = SubMenuContent

-- Add UICorner for apply settings button
local ApplySettingsCorner = Instance.new("UICorner")
ApplySettingsCorner.CornerRadius = UDim.new(0, 6)
ApplySettingsCorner.Parent = ApplySettingsButton

-- Position SubMenu Frame (Hidden by default)
local PositionSubMenuFrame = Instance.new("Frame")
PositionSubMenuFrame.Name = "PositionSubMenuFrame"
PositionSubMenuFrame.Size = UDim2.new(0, 250, 0, 300)
PositionSubMenuFrame.Position = UDim2.new(0.5, -325, 0.5, -150)
PositionSubMenuFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
PositionSubMenuFrame.BorderSizePixel = 0
PositionSubMenuFrame.Visible = false
PositionSubMenuFrame.Active = true
PositionSubMenuFrame.Draggable = true -- Enable built-in dragging
PositionSubMenuFrame.Parent = ScreenGui

-- Add UICorner for position submenu frame
local PositionSubMenuCorner = Instance.new("UICorner")
PositionSubMenuCorner.CornerRadius = UDim.new(0, 8)
PositionSubMenuCorner.Parent = PositionSubMenuFrame

-- Add UIStroke for position submenu frame
local PositionSubMenuStroke = Instance.new("UIStroke")
PositionSubMenuStroke.Thickness = 2
PositionSubMenuStroke.Color = Color3.fromRGB(255, 0, 0)
PositionSubMenuStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
PositionSubMenuStroke.Parent = PositionSubMenuFrame

-- Position SubMenu Title Bar
local PositionSubMenuTitleBar = Instance.new("Frame")
PositionSubMenuTitleBar.Name = "PositionSubMenuTitleBar"
PositionSubMenuTitleBar.Size = UDim2.new(1, 0, 0, 30)
PositionSubMenuTitleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
PositionSubMenuTitleBar.BorderSizePixel = 0
PositionSubMenuTitleBar.Parent = PositionSubMenuFrame

-- Add UICorner for position submenu title bar
local PositionSubMenuTitleCorner = Instance.new("UICorner")
PositionSubMenuTitleCorner.CornerRadius = UDim.new(0, 8)
PositionSubMenuTitleCorner.Parent = PositionSubMenuTitleBar

-- Position SubMenu Title
local PositionSubMenuTitle = Instance.new("TextLabel")
PositionSubMenuTitle.Name = "PositionSubMenuTitle"
PositionSubMenuTitle.Size = UDim2.new(1, -40, 1, 0)
PositionSubMenuTitle.Position = UDim2.new(0, 10, 0, 0)
PositionSubMenuTitle.BackgroundTransparency = 1
PositionSubMenuTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
PositionSubMenuTitle.TextSize = 16
PositionSubMenuTitle.Font = Enum.Font.SourceSansBold
PositionSubMenuTitle.Text = "Position Follow Settings"
PositionSubMenuTitle.TextXAlignment = Enum.TextXAlignment.Left
PositionSubMenuTitle.Parent = PositionSubMenuTitleBar

-- Position SubMenu Close Button
local PositionSubMenuCloseButton = Instance.new("TextButton")
PositionSubMenuCloseButton.Name = "PositionSubMenuCloseButton"
PositionSubMenuCloseButton.Size = UDim2.new(0, 30, 0, 30)
PositionSubMenuCloseButton.Position = UDim2.new(1, -30, 0, 0)
PositionSubMenuCloseButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
PositionSubMenuCloseButton.BorderSizePixel = 0
PositionSubMenuCloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
PositionSubMenuCloseButton.TextSize = 16
PositionSubMenuCloseButton.Font = Enum.Font.SourceSansBold
PositionSubMenuCloseButton.Text = "X"
PositionSubMenuCloseButton.Parent = PositionSubMenuTitleBar

-- Add UICorner for position submenu close button
local PositionSubMenuCloseCorner = Instance.new("UICorner")
PositionSubMenuCloseCorner.CornerRadius = UDim.new(0, 8)
PositionSubMenuCloseCorner.Parent = PositionSubMenuCloseButton

-- Position SubMenu Content
local PositionSubMenuContent = Instance.new("Frame")
PositionSubMenuContent.Name = "PositionSubMenuContent"
PositionSubMenuContent.Size = UDim2.new(1, 0, 1, -30)
PositionSubMenuContent.Position = UDim2.new(0, 0, 0, 30)
PositionSubMenuContent.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
PositionSubMenuContent.BorderSizePixel = 0
PositionSubMenuContent.Parent = PositionSubMenuFrame

-- Position Follow Section
local PositionFollowLabel = Instance.new("TextLabel")
PositionFollowLabel.Name = "PositionFollowLabel"
PositionFollowLabel.Size = UDim2.new(1, 0, 0, 30)
PositionFollowLabel.Position = UDim2.new(0, 0, 0, 10)
PositionFollowLabel.BackgroundTransparency = 1
PositionFollowLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
PositionFollowLabel.TextSize = 16
PositionFollowLabel.Font = Enum.Font.SourceSansBold
PositionFollowLabel.Text = "Position Follow"
PositionFollowLabel.Parent = PositionSubMenuContent

-- X Position Input
local XPositionLabel = Instance.new("TextLabel")
XPositionLabel.Name = "XPositionLabel"
XPositionLabel.Size = UDim2.new(0.2, 0, 0, 30)
XPositionLabel.Position = UDim2.new(0.05, 0, 0, 50)
XPositionLabel.BackgroundTransparency = 1
XPositionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
XPositionLabel.TextSize = 14
XPositionLabel.Font = Enum.Font.SourceSans
XPositionLabel.Text = "X:"
XPositionLabel.TextXAlignment = Enum.TextXAlignment.Left
XPositionLabel.Parent = PositionSubMenuContent

local XPositionInput = Instance.new("TextBox")
XPositionInput.Name = "XPositionInput"
XPositionInput.Size = UDim2.new(0.7, 0, 0, 30)
XPositionInput.Position = UDim2.new(0.25, 0, 0, 50)
XPositionInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
XPositionInput.BorderSizePixel = 0
XPositionInput.TextColor3 = Color3.fromRGB(255, 255, 255)
XPositionInput.TextSize = 14
XPositionInput.Font = Enum.Font.SourceSans
XPositionInput.Text = "0"
XPositionInput.Parent = PositionSubMenuContent

-- Add UICorner for X position input
local XPositionInputCorner = Instance.new("UICorner")
XPositionInputCorner.CornerRadius = UDim.new(0, 6)
XPositionInputCorner.Parent = XPositionInput

-- Y Position Input
local YPositionLabel = Instance.new("TextLabel")
YPositionLabel.Name = "YPositionLabel"
YPositionLabel.Size = UDim2.new(0.2, 0, 0, 30)
YPositionLabel.Position = UDim2.new(0.05, 0, 0, 90)
YPositionLabel.BackgroundTransparency = 1
YPositionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
YPositionLabel.TextSize = 14
YPositionLabel.Font = Enum.Font.SourceSans
YPositionLabel.Text = "Y:"
YPositionLabel.TextXAlignment = Enum.TextXAlignment.Left
YPositionLabel.Parent = PositionSubMenuContent

local YPositionInput = Instance.new("TextBox")
YPositionInput.Name = "YPositionInput"
YPositionInput.Size = UDim2.new(0.7, 0, 0, 30)
YPositionInput.Position = UDim2.new(0.25, 0, 0, 90)
YPositionInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
YPositionInput.BorderSizePixel = 0
YPositionInput.TextColor3 = Color3.fromRGB(255, 255, 255)
YPositionInput.TextSize = 14
YPositionInput.Font = Enum.Font.SourceSans
YPositionInput.Text = "0"
YPositionInput.Parent = PositionSubMenuContent

-- Add UICorner for Y position input
local YPositionInputCorner = Instance.new("UICorner")
YPositionInputCorner.CornerRadius = UDim.new(0, 6)
YPositionInputCorner.Parent = YPositionInput

-- Z Position Input
local ZPositionLabel = Instance.new("TextLabel")
ZPositionLabel.Name = "ZPositionLabel"
ZPositionLabel.Size = UDim2.new(0.2, 0, 0, 30)
ZPositionLabel.Position = UDim2.new(0.05, 0, 0, 130)
ZPositionLabel.BackgroundTransparency = 1
ZPositionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
ZPositionLabel.TextSize = 14
ZPositionLabel.Font = Enum.Font.SourceSans
ZPositionLabel.Text = "Z:"
ZPositionLabel.TextXAlignment = Enum.TextXAlignment.Left
ZPositionLabel.Parent = PositionSubMenuContent

local ZPositionInput = Instance.new("TextBox")
ZPositionInput.Name = "ZPositionInput"
ZPositionInput.Size = UDim2.new(0.7, 0, 0, 30)
ZPositionInput.Position = UDim2.new(0.25, 0, 0, 130)
ZPositionInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ZPositionInput.BorderSizePixel = 0
ZPositionInput.TextColor3 = Color3.fromRGB(255, 255, 255)
ZPositionInput.TextSize = 14
ZPositionInput.Font = Enum.Font.SourceSans
ZPositionInput.Text = "0"
ZPositionInput.Parent = PositionSubMenuContent

-- Add UICorner for Z position input
local ZPositionInputCorner = Instance.new("UICorner")
ZPositionInputCorner.CornerRadius = UDim.new(0, 6)
ZPositionInputCorner.Parent = ZPositionInput

-- Follow Position Button
local FollowPositionButton = Instance.new("TextButton")
FollowPositionButton.Name = "FollowPositionButton"
FollowPositionButton.Size = UDim2.new(0.9, 0, 0, 35)
FollowPositionButton.Position = UDim2.new(0.05, 0, 0, 170)
FollowPositionButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
FollowPositionButton.BorderSizePixel = 0
FollowPositionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FollowPositionButton.TextSize = 14
FollowPositionButton.Font = Enum.Font.SourceSansBold
FollowPositionButton.Text = "Follow Position: OFF"
FollowPositionButton.Parent = PositionSubMenuContent

-- Add UICorner for follow position button
local FollowPositionCorner = Instance.new("UICorner")
FollowPositionCorner.CornerRadius = UDim.new(0, 6)
FollowPositionCorner.Parent = FollowPositionButton

-- Auto Run Settings Section
local AutoRunSettingsLabel = Instance.new("TextLabel")
AutoRunSettingsLabel.Name = "AutoRunSettingsLabel"
AutoRunSettingsLabel.Size = UDim2.new(1, 0, 0, 30)
AutoRunSettingsLabel.Position = UDim2.new(0, 0, 0, 215)
AutoRunSettingsLabel.BackgroundTransparency = 1
AutoRunSettingsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoRunSettingsLabel.TextSize = 16
AutoRunSettingsLabel.Font = Enum.Font.SourceSansBold
AutoRunSettingsLabel.Text = "Auto Run Settings"
AutoRunSettingsLabel.Parent = PositionSubMenuContent

-- Low Health Threshold Input
local LowHealthLabel = Instance.new("TextLabel")
LowHealthLabel.Name = "LowHealthLabel"
LowHealthLabel.Size = UDim2.new(0.5, 0, 0, 30)
LowHealthLabel.Position = UDim2.new(0.05, 0, 0, 245)
LowHealthLabel.BackgroundTransparency = 1
LowHealthLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
LowHealthLabel.TextSize = 14
LowHealthLabel.Font = Enum.Font.SourceSans
LowHealthLabel.Text = "Low Health %:"
LowHealthLabel.TextXAlignment = Enum.TextXAlignment.Left
LowHealthLabel.Parent = PositionSubMenuContent

local LowHealthInput = Instance.new("TextBox")
LowHealthInput.Name = "LowHealthInput"
LowHealthInput.Size = UDim2.new(0.3, 0, 0, 30)
LowHealthInput.Position = UDim2.new(0.65, 0, 0, 245)
LowHealthInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
LowHealthInput.BorderSizePixel = 0
LowHealthInput.TextColor3 = Color3.fromRGB(255, 255, 255)
LowHealthInput.TextSize = 14
LowHealthInput.Font = Enum.Font.SourceSans
LowHealthInput.Text = "50"
LowHealthInput.Parent = PositionSubMenuContent

-- Add UICorner for low health input
local LowHealthInputCorner = Instance.new("UICorner")
LowHealthInputCorner.CornerRadius = UDim.new(0, 6)
LowHealthInputCorner.Parent = LowHealthInput

-- High Health Threshold Input
local HighHealthLabel = Instance.new("TextLabel")
HighHealthLabel.Name = "HighHealthLabel"
HighHealthLabel.Size = UDim2.new(0.5, 0, 0, 30)
HighHealthLabel.Position = UDim2.new(0.05, 0, 0, 285)
HighHealthLabel.BackgroundTransparency = 1
HighHealthLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
HighHealthLabel.TextSize = 14
HighHealthLabel.Font = Enum.Font.SourceSans
HighHealthLabel.Text = "High Health %:"
HighHealthLabel.TextXAlignment = Enum.TextXAlignment.Left
HighHealthLabel.Parent = PositionSubMenuContent

local HighHealthInput = Instance.new("TextBox")
HighHealthInput.Name = "HighHealthInput"
HighHealthInput.Size = UDim2.new(0.3, 0, 0, 30)
HighHealthInput.Position = UDim2.new(0.65, 0, 0, 285)
HighHealthInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
HighHealthInput.BorderSizePixel = 0
HighHealthInput.TextColor3 = Color3.fromRGB(255, 255, 255)
HighHealthInput.TextSize = 14
HighHealthInput.Font = Enum.Font.SourceSans
HighHealthInput.Text = "51"
HighHealthInput.Parent = PositionSubMenuContent

-- Add UICorner for high health input
local HighHealthInputCorner = Instance.new("UICorner")
HighHealthInputCorner.CornerRadius = UDim.new(0, 6)
HighHealthInputCorner.Parent = HighHealthInput

-- Functions
local function CheckExpiration()
local currentTime = os.time()
local expirationTime = os.time({
    year = EXPIRATION_DATE.Year,
    month = EXPIRATION_DATE.Month,
    day = EXPIRATION_DATE.Day,
    hour = EXPIRATION_DATE.Hour,
    min = EXPIRATION_DATE.Minute,
    sec = EXPIRATION_DATE.Second
})

local timeLeft = expirationTime - currentTime

if timeLeft <= 0 then
    -- Script has expired
    AuthFrame.Visible = false
    FeaturesFrame.Visible = false
    ExpiredFrame.Visible = true
    return true
else
    -- Calculate time left
    local days = math.floor(timeLeft / 86400)
    local hours = math.floor((timeLeft % 86400) / 3600)
    local minutes = math.floor((timeLeft % 3600) / 60)
    local seconds = timeLeft % 60
    
    ExpirationLabel.Text = string.format("Expires in: %d days, %02d:%02d:%02d", days, hours, minutes, seconds)
    return false
end
end

-- Rainbow border effect
local function StartRainbowEffect()
local colors = {
    Color3.fromRGB(255, 0, 0),    -- Red
    Color3.fromRGB(255, 165, 0),  -- Orange
    Color3.fromRGB(255, 255, 0),  -- Yellow
    Color3.fromRGB(0, 255, 0),    -- Green
    Color3.fromRGB(0, 0, 255),    -- Blue
    Color3.fromRGB(75, 0, 130),   -- Indigo
    Color3.fromRGB(238, 130, 238) -- Violet
}

local index = 1

spawn(function()
    while ScreenGui.Parent do
        local targetColor = colors[index]
        local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear)
        
        local mainTween = TweenService:Create(MainStroke, tweenInfo, {Color = targetColor})
        local iconTween = TweenService:Create(MinimizedIconStroke, tweenInfo, {Color = targetColor})
        local subMenuTween = TweenService:Create(SubMenuStroke, tweenInfo, {Color = targetColor})
        local positionSubMenuTween = TweenService:Create(PositionSubMenuStroke, tweenInfo, {Color = targetColor})
        
        mainTween:Play()
        iconTween:Play()
        subMenuTween:Play()
        positionSubMenuTween:Play()
        
        index = (index % #colors) + 1
        wait(0.5)
    end
end)
end

-- Player list functions
local function PopulatePlayerList()
-- Clear existing buttons
for _, child in pairs(PlayerScrollFrame:GetChildren()) do
    if child:IsA("TextButton") then
        child:Destroy()
    end
end

-- Clear player list
PlayerList = {}

-- Add all players except local player
for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        table.insert(PlayerList, player)
        
        local playerButton = Instance.new("TextButton")
        playerButton.Name = player.Name .. "Button"
        playerButton.Size = UDim2.new(0.9, 0, 0, 30)
        playerButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        playerButton.BorderSizePixel = 0
        playerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        playerButton.TextSize = 14
        playerButton.Font = Enum.Font.SourceSans
        playerButton.Text = player.Name
        playerButton.ZIndex = 12
        playerButton.Parent = PlayerScrollFrame
        
        -- Add UICorner for player button
        local playerButtonCorner = Instance.new("UICorner")
        playerButtonCorner.CornerRadius = UDim.new(0, 4)
        playerButtonCorner.Parent = playerButton
        
        -- Add UIStroke for highlighting selected player
        local playerButtonStroke = Instance.new("UIStroke")
        playerButtonStroke.Thickness = 2
        playerButtonStroke.Color = Color3.fromRGB(0, 255, 0)
        playerButtonStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        playerButtonStroke.Enabled = false
        playerButtonStroke.Parent = playerButton
        
        playerButton.MouseButton1Click:Connect(function()
            TargetPlayer = player
            TargetDropdown.Text = player.Name
            DropdownFrame.Visible = false
            UpdateTargetInfo()
            
            -- Highlight selected player button
            for _, btn in pairs(PlayerScrollFrame:GetChildren()) do
                if btn:IsA("TextButton") then
                    if btn.Name == player.Name .. "Button" then
                        btn.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
                        btn:FindFirstChildOfClass("UIStroke").Enabled = true
                    else
                        btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                        btn:FindFirstChildOfClass("UIStroke").Enabled = false
                    end
                end
            end
        end)
    end
end

-- Update canvas size based on number of players
local contentHeight = #PlayerList * 35
PlayerScrollFrame.CanvasSize = UDim2.new(0, 0, 0, contentHeight)
end

-- Update target info display
local function UpdateTargetInfo()
    if TargetPlayer and TargetPlayer.Character and TargetPlayer.Character:FindFirstChild("Humanoid") then
        local humanoid = TargetPlayer.Character:FindFirstChild("Humanoid")
        local rootPart = TargetPlayer.Character:FindFirstChild("HumanoidRootPart")
        
        if humanoid and rootPart then
            local health = math.floor(humanoid.Health)
            local maxHealth = math.floor(humanoid.MaxHealth)
            local healthPercent = math.floor((health / maxHealth) * 100)
            local position = rootPart.Position
            local posStr = string.format("%.1f, %.1f, %.1f", position.X, position.Y, position.Z)
            
            TargetInfoDisplay.Text = TargetPlayer.Name .. " | HP: " .. health .. "/" .. maxHealth .. " (" .. healthPercent .. "%)"
        else
            TargetInfoDisplay.Text = TargetPlayer.Name .. " | No health data"
        end
    else
        TargetInfoDisplay.Text = "No Target Selected"
    end
end

-- Toggle noclip function
local function ToggleNoclip()
NoClipping = not NoClipping

if NoClipping then
    NoclipButton.Text = "Noclip: ON"
    NoclipButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    
    -- Enable noclip
    local noclipConnection = RunService.Stepped:Connect(function()
        if Character and NoClipping then
            for _, part in pairs(Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
    end)
    
    -- Store the connection
    NoclipButton.NoclipConnection = noclipConnection
else
    NoclipButton.Text = "Noclip: OFF"
    NoclipButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    
    -- Disable noclip
    if NoclipButton.NoclipConnection then
        NoclipButton.NoclipConnection:Disconnect()
        NoclipButton.NoclipConnection = nil
    end
    
    -- Reset collision
    for _, part in pairs(Character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = true
        end
    end
end
end

-- Platform function
local function TogglePlatform()
AutoPlatform = not AutoPlatform

if AutoPlatform then
    PlatformButton.Text = "Platform: ON"
    PlatformButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    AutoPlatformCheck.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    
    -- Create platform
    local platform = Instance.new("Part")
    platform.Name = "ExecutorPlatform"
    platform.Size = Vector3.new(5, 1, 5)
    platform.Anchored = true
    platform.CanCollide = true
    platform.Transparency = 0.5
    platform.Material = Enum.Material.Neon
    platform.Color = Color3.fromRGB(0, 120, 255)
    platform.Parent = workspace
    
    -- Platform update loop
    local platformConnection = RunService.Heartbeat:Connect(function()
        if AutoPlatform and Character and Character:FindFirstChild("HumanoidRootPart") then
            platform.CFrame = CFrame.new(HumanoidRootPart.Position.X, HumanoidRootPart.Position.Y - 3.5, HumanoidRootPart.Position.Z)
        end
    end)
    
    -- Store references
    PlatformButton.Platform = platform
    PlatformButton.PlatformConnection = platformConnection
else
    PlatformButton.Text = "Platform: OFF"
    PlatformButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    AutoPlatformCheck.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    
    -- Remove platform
    if PlatformButton.Platform and PlatformButton.Platform:IsDescendantOf(workspace) then
        PlatformButton.Platform:Destroy()
        PlatformButton.Platform = nil
    end
    
    -- Disconnect update loop
    if PlatformButton.PlatformConnection then
        PlatformButton.PlatformConnection:Disconnect()
        PlatformButton.PlatformConnection = nil
    end
end
end

-- Follow target function
local function ToggleFollowTarget()
FollowingTarget = not FollowingTarget

if FollowingTarget then
    if not TargetPlayer or not TargetPlayer.Character then
        FollowingTarget = false
        return
    end
    
    FollowButton.Text = "Follow: ON"
    FollowButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    
    -- Get distance values
    DistanceBehind = tonumber(HorizontalInput.Text) or 5
    DistanceAbove = tonumber(VerticalInput.Text) or 0
    
    -- Follow loop
    local followConnection = RunService.Heartbeat:Connect(function()
        if FollowingTarget and TargetPlayer and TargetPlayer.Character and TargetPlayer.Character:FindFirstChild("HumanoidRootPart") and Character and Character:FindFirstChild("HumanoidRootPart") then
            local targetHRP = TargetPlayer.Character.HumanoidRootPart
            local targetHumanoid = TargetPlayer.Character:FindFirstChild("Humanoid")
            
            -- Check if target is dead and auto next is enabled
            if AutoNextTarget and targetHumanoid and targetHumanoid.Health <= 0 then
                -- Find next target
                local foundNext = false
                for _, player in pairs(PlayerList) do
                    if player ~= TargetPlayer and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
                        TargetPlayer = player
                        TargetDropdown.Text = player.Name
                        UpdateTargetInfo()
                        foundNext = true
                        break
                    end
                end
                
                if not foundNext then
                    FollowingTarget = false
                    FollowButton.Text = "Follow: OFF"
                    FollowButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
                    followConnection:Disconnect()
                end
            else
                -- Calculate position behind target
                local targetLookVector = targetHRP.CFrame.LookVector
                local behindPosition = targetHRP.Position - (targetLookVector * DistanceBehind)
                behindPosition = behindPosition + Vector3.new(0, DistanceAbove, 0)
                
                -- Teleport behind target
                HumanoidRootPart.CFrame = CFrame.new(behindPosition, targetHRP.Position)
            end
        end
    end)
    
    -- Store connection
    FollowButton.FollowConnection = followConnection
else
    FollowButton.Text = "Follow: OFF"
    FollowButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    
    -- Disconnect follow loop
    if FollowButton.FollowConnection then
        FollowButton.FollowConnection:Disconnect()
        FollowButton.FollowConnection = nil
    end
end
end

-- Follow position function
local function ToggleFollowPosition()
FollowingPosition = not FollowingPosition

if FollowingPosition then
    -- Get position values
    local xPos = tonumber(XPositionInput.Text) or 0
    local yPos = tonumber(YPositionInput.Text) or 0
    local zPos = tonumber(ZPositionInput.Text) or 0
    
    FollowPosition = Vector3.new(xPos, yPos, zPos)
    FollowPositionButton.Text = "Follow Position: ON"
    FollowPositionButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    
    -- Follow position loop
    local followPositionConnection = RunService.Heartbeat:Connect(function()
        if FollowingPosition and Character and Character:FindFirstChild("HumanoidRootPart") then
            HumanoidRootPart.CFrame = CFrame.new(FollowPosition)
        end
    end)
    
    -- Store connection
    FollowPositionButton.FollowPositionConnection = followPositionConnection
else
    FollowPositionButton.Text = "Follow Position: OFF"
    FollowPositionButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    
    -- Disconnect follow position loop
    if FollowPositionButton.FollowPositionConnection then
        FollowPositionButton.FollowPositionConnection:Disconnect()
        FollowPositionButton.FollowPositionConnection = nil
    end
end
end

-- Run away function
local function ToggleRunAway()
RunningAway = not RunningAway

if RunningAway then
    RunButton.Text = "Run Away: ON"
    RunButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    
    -- Get detection radius
    DetectionRadius = tonumber(RadiusInput.Text) or 20
    
    -- Run away loop
    local runConnection = RunService.Heartbeat:Connect(function()
        if RunningAway and Character and Character:FindFirstChild("HumanoidRootPart") then
            -- Check for nearby players
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    local distance = (HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                    
                    if distance <= DetectionRadius then
                        -- Calculate escape position (100 studs away in opposite direction)
                        local direction = (HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Unit
                        local escapePosition = HumanoidRootPart.Position + direction * 100
                        
                        -- Teleport to escape position
                        HumanoidRootPart.CFrame = CFrame.new(escapePosition, escapePosition + HumanoidRootPart.CFrame.LookVector)
                        break
                    end
                end
            end
        end
    end)
    
    -- Store connection
    RunButton.RunConnection = runConnection
else
    RunButton.Text = "Run Away: OFF"
    RunButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    
    -- Disconnect run away loop
    if RunButton.RunConnection then
        RunButton.RunConnection:Disconnect()
        RunButton.RunConnection = nil
    end
end
end

-- Auto Run function
local function ToggleAutoRun()
AutoRunEnabled = not AutoRunEnabled

if AutoRunEnabled then
    AutoRunButton.Text = "Auto Run: ON"
    AutoRunButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    
    -- Get health thresholds
    LowHealthThreshold = tonumber(LowHealthInput.Text) or 50
    HighHealthThreshold = tonumber(HighHealthInput.Text) or 51
    
    -- Auto run loop
    local autoRunConnection = RunService.Heartbeat:Connect(function()
        if AutoRunEnabled and Character and Character:FindFirstChild("HumanoidRootPart") and Character:FindFirstChild("Humanoid") then
            local humanoid = Character:FindFirstChild("Humanoid")
            local healthPercent = (humanoid.Health / humanoid.MaxHealth) * 100
            
            if healthPercent <= LowHealthThreshold and not PositionBeforeAutoRun then
                -- Save current position before running
                PositionBeforeAutoRun = HumanoidRootPart.CFrame
                
                -- Run upwards
                local runUpwardsConnection = RunService.Heartbeat:Connect(function()
                    if AutoRunEnabled and Character and Character:FindFirstChild("HumanoidRootPart") then
                        local currentPos = HumanoidRootPart.Position
                        HumanoidRootPart.CFrame = CFrame.new(currentPos.X, currentPos.Y + AutoRunHeight, currentPos.Z)
                    else
                        if runUpwardsConnection then
                            runUpwardsConnection:Disconnect()
                        end
                    end
                end)
                
                -- Store connection
                AutoRunButton.RunUpwardsConnection = runUpwardsConnection
            elseif healthPercent >= HighHealthThreshold and PositionBeforeAutoRun then
                -- Return to saved position
                HumanoidRootPart.CFrame = PositionBeforeAutoRun
                PositionBeforeAutoRun = nil
                
                -- Disconnect run upwards loop
                if AutoRunButton.RunUpwardsConnection then
                    AutoRunButton.RunUpwardsConnection:Disconnect()
                    AutoRunButton.RunUpwardsConnection = nil
                end
            end
        end
    end)
    
    -- Store connection
    AutoRunButton.AutoRunConnection = autoRunConnection
else
    AutoRunButton.Text = "Auto Run: OFF"
    AutoRunButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    
    -- Disconnect auto run loop
    if AutoRunButton.AutoRunConnection then
        AutoRunButton.AutoRunConnection:Disconnect()
        AutoRunButton.AutoRunConnection = nil
    end
    
    -- Disconnect run upwards loop
    if AutoRunButton.RunUpwardsConnection then
        AutoRunButton.RunUpwardsConnection:Disconnect()
        AutoRunButton.RunUpwardsConnection = nil
    end
    
    -- Reset position if needed
    if PositionBeforeAutoRun and Character and Character:FindFirstChild("HumanoidRootPart") then
        HumanoidRootPart.CFrame = PositionBeforeAutoRun
        PositionBeforeAutoRun = nil
    end
end
end

-- Toggle auto next target
local function ToggleAutoNext()
AutoNextTarget = not AutoNextTarget

if AutoNextTarget then
    NextButton.Text = "Auto Next: ON"
    NextButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    AutoNextCheck.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
else
    NextButton.Text = "Auto Next: OFF"
    NextButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    AutoNextCheck.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
end
end

-- Toggle auto disable on target death
local function ToggleAutoDisable()
AutoDisableOnTargetDeath = not AutoDisableOnTargetDeath

if AutoDisableOnTargetDeath then
    AutoDisableCheck.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
else
    AutoDisableCheck.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
end
end

-- Save current position
local function SaveCurrentPosition()
if Character and Character:FindFirstChild("HumanoidRootPart") then
    SavedPosition = HumanoidRootPart.CFrame
    
    -- Show confirmation message
    local confirmMsg = Instance.new("TextLabel")
    confirmMsg.Size = UDim2.new(0.9, 0, 0, 20)
    confirmMsg.Position = UDim2.new(0.05, 0, 0, 75)
    confirmMsg.BackgroundTransparency = 1
    confirmMsg.TextColor3 = Color3.fromRGB(0, 255, 0)
    confirmMsg.TextSize = 12
    confirmMsg.Font = Enum.Font.SourceSans
    confirmMsg.Text = "Position saved!"
    confirmMsg.Parent = PositionSection
    
    -- Remove after 2 seconds
    task.delay(2, function()
        confirmMsg:Destroy()
    end)
end
end

-- Teleport to saved position
local function TeleportToSavedPosition()
if SavedPosition and Character and Character:FindFirstChild("HumanoidRootPart") then
    HumanoidRootPart.CFrame = SavedPosition
else
    -- Show error message
    local errorMsg = Instance.new("TextLabel")
    errorMsg.Size = UDim2.new(0.9, 0, 0, 20)
    errorMsg.Position = UDim2.new(0.05, 0, 0, 75)
    errorMsg.BackgroundTransparency = 1
    errorMsg.TextColor3 = Color3.fromRGB(255, 0, 0)
    errorMsg.TextSize = 12
    errorMsg.Font = Enum.Font.SourceSans
    errorMsg.Text = "No position saved!"
    errorMsg.Parent = PositionSection
    
    -- Remove after 2 seconds
    task.delay(2, function()
        errorMsg:Destroy()
    end)
end
end

-- Toggle auto check position
local function ToggleAutoCheckPosition()
AutoCheckPosition = not AutoCheckPosition

if AutoCheckPosition then
    AutoCheckButton.Text = "ON"
    AutoCheckButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    
    -- Get safe position boundaries
    local verticalMin = tonumber(VerticalMinInput.Text) or -1000
    local verticalMax = tonumber(VerticalMaxInput.Text) or 1000
    local horizontalMin = tonumber(HorizontalMinInput.Text) or -1000
    local horizontalMax = tonumber(HorizontalMaxInput.Text) or 1000
    
    SafePositionMin = Vector3.new(horizontalMin, verticalMin, horizontalMin)
    SafePositionMax = Vector3.new(horizontalMax, verticalMax, horizontalMax)
    
    -- Auto check loop
    local checkConnection = RunService.Heartbeat:Connect(function()
        if AutoCheckPosition and Character and Character:FindFirstChild("HumanoidRootPart") then
            local pos = HumanoidRootPart.Position
            local lastSafePosition = HumanoidRootPart.CFrame
            
            -- Check if position is outside safe boundaries
            if pos.Y < SafePositionMin.Y or pos.Y > SafePositionMax.Y or
               pos.X < SafePositionMin.X or pos.X > SafePositionMax.X or
               pos.Z < SafePositionMin.Z or pos.Z > SafePositionMax.Z then
                
                -- If we have a saved position, teleport to it
                if SavedPosition then
                    HumanoidRootPart.CFrame = SavedPosition
                else
                    -- Otherwise, try to move back to a safe position
                    local safeY = math.clamp(pos.Y, SafePositionMin.Y, SafePositionMax.Y)
                    local safeX = math.clamp(pos.X, SafePositionMin.X, SafePositionMax.X)
                    local safeZ = math.clamp(pos.Z, SafePositionMin.Z, SafePositionMax.Z)
                    
                    HumanoidRootPart.CFrame = CFrame.new(safeX, safeY, safeZ, HumanoidRootPart.CFrame:GetComponents())
                end
            else
                -- Update last safe position
                AutoCheckButton.LastSafePosition = lastSafePosition
            end
        end
    end)
    
    -- Store connection
    AutoCheckButton.CheckConnection = checkConnection
else
    AutoCheckButton.Text = "OFF"
    AutoCheckButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    
    -- Disconnect auto check loop
    if AutoCheckButton.CheckConnection then
        AutoCheckButton.CheckConnection:Disconnect()
        AutoCheckButton.CheckConnection = nil
    end
end
end

-- Apply safety settings
local function ApplySafetySettings()
-- Get values from inputs
local verticalMin = tonumber(VerticalMinInput.Text) or -1000
local verticalMax = tonumber(VerticalMaxInput.Text) or 1000
local horizontalMin = tonumber(HorizontalMinInput.Text) or -1000
local horizontalMax = tonumber(HorizontalMaxInput.Text) or 1000

-- Update safe position boundaries
SafePositionMin = Vector3.new(horizontalMin, verticalMin, horizontalMin)
SafePositionMax = Vector3.new(horizontalMax, verticalMax, horizontalMax)

-- Show confirmation message
local confirmMsg = Instance.new("TextLabel")
confirmMsg.Size = UDim2.new(0.9, 0, 0, 20)
confirmMsg.Position = UDim2.new(0.05, 0, 0, 270)
confirmMsg.BackgroundTransparency = 1
confirmMsg.TextColor3 = Color3.fromRGB(0, 255, 0)
confirmMsg.TextSize = 12
confirmMsg.Font = Enum.Font.SourceSans
confirmMsg.Text = "Settings applied!"
confirmMsg.Parent = SubMenuContent

-- Remove after 2 seconds
task.delay(2, function()
    confirmMsg:Destroy()
end)

-- If auto check is on, restart it with new settings
if AutoCheckPosition then
    if AutoCheckButton.CheckConnection then
        AutoCheckButton.CheckConnection:Disconnect()
        AutoCheckButton.CheckConnection = nil
    end
    ToggleAutoCheckPosition()
    ToggleAutoCheckPosition()
end
end

-- Toggle submenu
local function ToggleSubMenu()
SubMenuVisible = not SubMenuVisible
SubMenuFrame.Visible = SubMenuVisible
end

-- Toggle position submenu
local function TogglePositionSubMenu()
PositionSubMenuVisible = not PositionSubMenuVisible
PositionSubMenuFrame.Visible = PositionSubMenuVisible
end

-- Find nearest player
local function FindNearestPlayer()
local nearestPlayer = nil
local shortestDistance = math.huge

if Character and Character:FindFirstChild("HumanoidRootPart") then
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            
            if distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = player
            end
        end
    end
end

return nearestPlayer
end

-- Toggle view target
local function ToggleViewTarget()
ViewingTarget = not ViewingTarget

if ViewingTarget then
    if not TargetPlayer or not TargetPlayer.Character then
        ViewingTarget = false
        return
    end
    
    ViewTargetButton.Text = "View Target: ON"
    ViewTargetButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    
    -- View target loop
    local viewConnection = RunService.RenderStepped:Connect(function()
        if ViewingTarget and TargetPlayer and TargetPlayer.Character then
            local targetHead = TargetPlayer.Character:FindFirstChild("Head")
            
            if targetHead then
                Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetHead.Position)
            end
            
            -- Check if target is dead and auto disable is enabled
            if AutoDisableOnTargetDeath and TargetPlayer.Character:FindFirstChild("Humanoid") and TargetPlayer.Character.Humanoid.Health <= 0 then
                ViewingTarget = false
                ViewTargetButton.Text = "View Target: OFF"
                ViewTargetButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
                
                if viewConnection then
                    viewConnection:Disconnect()
                    viewConnection = nil
                end
            end
        end
    end)
    
    -- Store connection
    ViewTargetButton.ViewConnection = viewConnection
else
    ViewTargetButton.Text = "View Target: OFF"
    ViewTargetButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    
    -- Disconnect view target loop
    if ViewTargetButton.ViewConnection then
        ViewTargetButton.ViewConnection:Disconnect()
        ViewTargetButton.ViewConnection = nil
    end
    
    -- Reset camera
    Camera.CameraType = Enum.CameraType.Custom
end
end

-- Toggle ESP features
local function ToggleESP()
ESPEnabled = not ESPEnabled

if ESPEnabled then
    ESPNameButton.Text = "ESP Name: ON"
    ESPNameButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    
    -- Create ESP for all players
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            -- Create ESP name label
            local nameLabel = Instance.new("BillboardGui")
            nameLabel.Name = player.Name .. "_ESPName"
            nameLabel.Size = UDim2.new(0, 200, 0, 50)
            nameLabel.StudsOffset = Vector3.new(0, 3, 0)
            nameLabel.AlwaysOnTop = true
            nameLabel.LightInfluence = 0
            
            local nameText = Instance.new("TextLabel")
            nameText.Size = UDim2.new(1, 0, 1, 0)
            nameText.BackgroundTransparency = 1
            nameText.TextColor3 = Color3.fromRGB(255, 255, 255)
            nameText.TextStrokeTransparency = 0
            nameText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
            nameText.TextSize = 14
            nameText.Font = Enum.Font.SourceSansBold
            nameText.Text = player.Name
            nameText.Parent = nameLabel
            
            if player.Character and player.Character:FindFirstChild("Head") then
                nameLabel.Adornee = player.Character.Head
                nameLabel.Parent = player.Character.Head
            end
            
            -- Store ESP label
            if not ESPNameButton.ESPLabels then
                ESPNameButton.ESPLabels = {}
            end
            ESPNameButton.ESPLabels[player.Name] = nameLabel
        end
    end
    
    -- ESP update loop
    local espUpdateConnection = RunService.Heartbeat:Connect(function()
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                local espLabel = ESPNameButton.ESPLabels and ESPNameButton.ESPLabels[player.Name]
                
                if espLabel and player.Character and player.Character:FindFirstChild("Head") then
                    espLabel.Adornee = player.Character.Head
                    espLabel.Parent = player.Character.Head
                end
            end
        end
    end)
    
    -- Store connection
    ESPNameButton.ESPUpdateConnection = espUpdateConnection
else
    ESPNameButton.Text = "ESP Name: OFF"
    ESPNameButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    
    -- Remove ESP labels
    if ESPNameButton.ESPLabels then
        for _, label in pairs(ESPNameButton.ESPLabels) do
            if label and label.Parent then
                label:Destroy()
            end
        end
        ESPNameButton.ESPLabels = {}
    end
    
    -- Disconnect ESP update loop
    if ESPNameButton.ESPUpdateConnection then
        ESPNameButton.ESPUpdateConnection:Disconnect()
        ESPNameButton.ESPUpdateConnection = nil
    end
end
end

-- Toggle hitbox
local function ToggleHitbox()
HitboxEnabled = not HitboxEnabled

if HitboxEnabled then
    HitboxButton.Text = "Hitbox: ON"
    HitboxButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    
    -- Create hitbox for all players
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            for _, part in pairs(player.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    -- Create hitbox box
                    local hitbox = Instance.new("BoxHandleAdornment")
                    hitbox.Name = part.Name .. "_Hitbox"
                    hitbox.Size = part.Size
                    hitbox.Adornee = part
                    hitbox.AlwaysOnTop = true
                    hitbox.ZIndex = 10
                    hitbox.Transparency = 0.7
                    hitbox.Color3 = Color3.fromRGB(255, 0, 0)
                    hitbox.Parent = part
                    
                    -- Store hitbox
                    if not HitboxButton.Hitboxes then
                        HitboxButton.Hitboxes = {}
                    end
                    if not HitboxButton.Hitboxes[player.Name] then
                        HitboxButton.Hitboxes[player.Name] = {}
                    end
                    table.insert(HitboxButton.Hitboxes[player.Name], hitbox)
                end
            end
        end
    end
    
    -- Hitbox update loop
    local hitboxUpdateConnection = RunService.Heartbeat:Connect(function()
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                -- Remove old hitboxes
                if HitboxButton.Hitboxes and HitboxButton.Hitboxes[player.Name] then
                    for _, hitbox in pairs(HitboxButton.Hitboxes[player.Name]) do
                        if hitbox and hitbox.Parent then
                            hitbox:Destroy()
                        end
                    end
                    HitboxButton.Hitboxes[player.Name] = {}
                end
                
                -- Create new hitboxes
                for _, part in pairs(player.Character:GetChildren()) do
                    if part:IsA("BasePart") then
                        local hitbox = Instance.new("BoxHandleAdornment")
                        hitbox.Name = part.Name .. "_Hitbox"
                        hitbox.Size = part.Size
                        hitbox.Adornee = part
                        hitbox.AlwaysOnTop = true
                        hitbox.ZIndex = 10
                        hitbox.Transparency = 0.7
                        hitbox.Color3 = Color3.fromRGB(255, 0, 0)
                        hitbox.Parent = part
                        
                        if not HitboxButton.Hitboxes then
                            HitboxButton.Hitboxes = {}
                        end
                        if not HitboxButton.Hitboxes[player.Name] then
                            HitboxButton.Hitboxes[player.Name] = {}
                        end
                        table.insert(HitboxButton.Hitboxes[player.Name], hitbox)
                    end
                end
            end
        end
    end)
    
    -- Store connection
    HitboxButton.HitboxUpdateConnection = hitboxUpdateConnection
else
    HitboxButton.Text = "Hitbox: OFF"
    HitboxButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    
    -- Remove hitboxes
    if HitboxButton.Hitboxes then
        for _, playerHitboxes in pairs(HitboxButton.Hitboxes) do
            for _, hitbox in pairs(playerHitboxes) do
                if hitbox and hitbox.Parent then
                    hitbox:Destroy()
                end
            end
        end
        HitboxButton.Hitboxes = {}
    end
    
    -- Disconnect hitbox update loop
    if HitboxButton.HitboxUpdateConnection then
        HitboxButton.HitboxUpdateConnection:Disconnect()
        HitboxButton.HitboxUpdateConnection = nil
    end
end
end

-- Toggle glow
local function ToggleGlow()
GlowEnabled = not GlowEnabled

if GlowEnabled then
    GlowButton.Text = "Glow: ON"
    GlowButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    
    -- Create glow for all players
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            for _, part in pairs(player.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    -- Create glow
                    local glow = Instance.new("SurfaceLight")
                    glow.Name = part.Name .. "_Glow"
                    glow.Brightness = 5
                    glow.Color = Color3.fromRGB(255, 0, 0)
                    glow.Range = 10
                    glow.Parent = part
                    
                    -- Store glow
                    if not GlowButton.Glows then
                        GlowButton.Glows = {}
                    end
                    if not GlowButton.Glows[player.Name] then
                        GlowButton.Glows[player.Name] = {}
                    end
                    table.insert(GlowButton.Glows[player.Name], glow)
                end
            end
        end
    end
    
    -- Glow update loop
    local glowUpdateConnection = RunService.Heartbeat:Connect(function()
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                -- Check if player has glows
                if not GlowButton.Glows or not GlowButton.Glows[player.Name] then
                    -- Create glows for player
                    for _, part in pairs(player.Character:GetChildren()) do
                        if part:IsA("BasePart") then
                            local glow = Instance.new("SurfaceLight")
                            glow.Name = part.Name .. "_Glow"
                            glow.Brightness = 5
                            glow.Color = Color3.fromRGB(255, 0, 0)
                            glow.Range = 10
                            glow.Parent = part
                            
                            if not GlowButton.Glows then
                                GlowButton.Glows = {}
                            end
                            if not GlowButton.Glows[player.Name] then
                                GlowButton.Glows[player.Name] = {}
                            end
                            table.insert(GlowButton.Glows[player.Name], glow)
                        end
                    end
                end
            end
        end
    end)
    
    -- Store connection
    GlowButton.GlowUpdateConnection = glowUpdateConnection
else
    GlowButton.Text = "Glow: OFF"
    GlowButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    
    -- Remove glows
    if GlowButton.Glows then
        for _, playerGlows in pairs(GlowButton.Glows) do
            for _, glow in pairs(playerGlows) do
                if glow and glow.Parent then
                    glow:Destroy()
                end
            end
        end
        GlowButton.Glows = {}
    end
    
    -- Disconnect glow update loop
    if GlowButton.GlowUpdateConnection then
        GlowButton.GlowUpdateConnection:Disconnect()
        GlowButton.GlowUpdateConnection = nil
    end
end
end

-- Toggle ESP HP
local function ToggleESPHP()
ESPHPEnabled = not ESPHPEnabled

if ESPHPEnabled then
    ESPHPButton.Text = "ESP HP: ON"
    ESPHPButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    
    -- Create ESP HP for all players
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            -- Create ESP HP label
            local hpLabel = Instance.new("BillboardGui")
            hpLabel.Name = player.Name .. "_ESPHP"
            hpLabel.Size = UDim2.new(0, 200, 0, 50)
            hpLabel.StudsOffset = Vector3.new(0, 4, 0)
            hpLabel.AlwaysOnTop = true
            hpLabel.LightInfluence = 0
            
            local hpText = Instance.new("TextLabel")
            hpText.Size = UDim2.new(1, 0, 1, 0)
            hpText.BackgroundTransparency = 1
            hpText.TextColor3 = Color3.fromRGB(0, 255, 0)
            hpText.TextStrokeTransparency = 0
            hpText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
            hpText.TextSize = 14
            hpText.Font = Enum.Font.SourceSansBold
            hpText.Text = "HP: ?"
            hpText.Parent = hpLabel
            
            if player.Character and player.Character:FindFirstChild("Head") then
                hpLabel.Adornee = player.Character.Head
                hpLabel.Parent = player.Character.Head
                
                -- Update HP text
                if player.Character:FindFirstChild("Humanoid") then
                    local health = math.floor(player.Character.Humanoid.Health)
                    local maxHealth = math.floor(player.Character.Humanoid.MaxHealth)
                    hpText.Text = "HP: " .. health .. "/" .. maxHealth
                end
            end
            
            -- Store ESP HP label
            if not ESPHPButton.ESPHPLabels then
                ESPHPButton.ESPHPLabels = {}
            end
            ESPHPButton.ESPHPLabels[player.Name] = hpLabel
        end
    end
    
    -- ESP HP update loop
    local espHPUpdateConnection = RunService.Heartbeat:Connect(function()
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                local espHPLabel = ESPHPButton.ESPHPLabels and ESPHPButton.ESPHPLabels[player.Name]
                
                if espHPLabel and player.Character and player.Character:FindFirstChild("Head") then
                    espHPLabel.Adornee = player.Character.Head
                    espHPLabel.Parent = player.Character.Head
                    
                    -- Update HP text
                    if player.Character:FindFirstChild("Humanoid") then
                        local health = math.floor(player.Character.Humanoid.Health)
                        local maxHealth = math.floor(player.Character.Humanoid.MaxHealth)
                        espHPLabel.TextLabel.Text = "HP: " .. health .. "/" .. maxHealth
                        
                        -- Update color based on health percentage
                        local healthPercent = health / maxHealth
                        if healthPercent > 0.7 then
                            espHPLabel.TextLabel.TextColor3 = Color3.fromRGB(0, 255, 0) -- Green
                        elseif healthPercent > 0.3 then
                            espHPLabel.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0) -- Yellow
                        else
                            espHPLabel.TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0) -- Red
                        end
                    end
                end
            end
        end
    end)
    
    -- Store connection
    ESPHPButton.ESPHPUpdateConnection = espHPUpdateConnection
else
    ESPHPButton.Text = "ESP HP: OFF"
    ESPHPButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    
    -- Remove ESP HP labels
    if ESPHPButton.ESPHPLabels then
        for _, label in pairs(ESPHPButton.ESPHPLabels) do
            if label and label.Parent then
                label:Destroy()
            end
        end
        ESPHPButton.ESPHPLabels = {}
    end
    
    -- Disconnect ESP HP update loop
    if ESPHPButton.ESPHPUpdateConnection then
        ESPHPButton.ESPHPUpdateConnection:Disconnect()
        ESPHPButton.ESPHPUpdateConnection = nil
    end
end
end

-- Toggle ESP Position
local function ToggleESPPosition()
ESPPositionEnabled = not ESPPositionEnabled

if ESPPositionEnabled then
    ESPPositionButton.Text = "ESP Position: ON"
    ESPPositionButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    
    -- Create ESP Position for all players
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            -- Create ESP Position label
            local posLabel = Instance.new("BillboardGui")
            posLabel.Name = player.Name .. "_ESPPosition"
            posLabel.Size = UDim2.new(0, 200, 0, 50)
            posLabel.StudsOffset = Vector3.new(0, 5, 0)
            posLabel.AlwaysOnTop = true
            posLabel.LightInfluence = 0
            
            local posText = Instance.new("TextLabel")
            posText.Size = UDim2.new(1, 0, 1, 0)
            posText.BackgroundTransparency = 1
            posText.TextColor3 = Color3.fromRGB(255, 255, 255)
            posText.TextStrokeTransparency = 0
            posText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
            posText.TextSize = 14
            posText.Font = Enum.Font.SourceSansBold
            posText.Text = "Pos: ?"
            posText.Parent = posLabel
            
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                posLabel.Adornee = player.Character.HumanoidRootPart
                posLabel.Parent = player.Character.HumanoidRootPart
                
                -- Update Position text
                local position = player.Character.HumanoidRootPart.Position
                posText.Text = string.format("Pos: %.1f, %.1f, %.1f", position.X, position.Y, position.Z)
            end
            
            -- Store ESP Position label
            if not ESPPositionButton.ESPPositionLabels then
                ESPPositionButton.ESPPositionLabels = {}
            end
            ESPPositionButton.ESPPositionLabels[player.Name] = posLabel
        end
    end
    
    -- ESP Position update loop
    local espPositionUpdateConnection = RunService.Heartbeat:Connect(function()
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                local espPosLabel = ESPPositionButton.ESPPositionLabels and ESPPositionButton.ESPPositionLabels[player.Name]
                
                if espPosLabel and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    espPosLabel.Adornee = player.Character.HumanoidRootPart
                    espPosLabel.Parent = player.Character.HumanoidRootPart
                    
                    -- Update Position text
                    local position = player.Character.HumanoidRootPart.Position
                    espPosLabel.TextLabel.Text = string.format("Pos: %.1f, %.1f, %.1f", position.X, position.Y, position.Z)
                end
            end
        end
    end)
    
    -- Store connection
    ESPPositionButton.ESPPositionUpdateConnection = espPositionUpdateConnection
else
    ESPPositionButton.Text = "ESP Position: OFF"
    ESPPositionButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    
    -- Remove ESP Position labels
    if ESPPositionButton.ESPPositionLabels then
        for _, label in pairs(ESPPositionButton.ESPPositionLabels) do
            if label and label.Parent then
                label:Destroy()
            end
        end
        ESPPositionButton.ESPPositionLabels = {}
    end
    
    -- Disconnect ESP Position update loop
    if ESPPositionButton.ESPPositionUpdateConnection then
        ESPPositionButton.ESPPositionUpdateConnection:Disconnect()
        ESPPositionButton.ESPPositionUpdateConnection = nil
    end
end
end

-- Limit dragging to screen bounds
local function LimitDragging()
local screenSize = workspace.CurrentCamera.ViewportSize
local frameSize = MainFrame.AbsoluteSize
local minX = 0
local minY = 0
local maxX = screenSize.X - frameSize.X
local maxY = screenSize.Y - frameSize.Y

local newX = math.clamp(MainFrame.AbsolutePosition.X, minX, maxX)
local newY = math.clamp(MainFrame.AbsolutePosition.Y, minY, maxY)

if MainFrame.AbsolutePosition.X ~= newX or MainFrame.AbsolutePosition.Y ~= newY then
    MainFrame.Position = UDim2.new(0, newX, 0, newY)
end
end

local function LimitIconDragging()
local screenSize = workspace.CurrentCamera.ViewportSize
local iconSize = MinimizedIcon.AbsoluteSize
local minX = 0
local minY = 0
local maxX = screenSize.X - iconSize.X
local maxY = screenSize.Y - iconSize.Y

local newX = math.clamp(MinimizedIcon.AbsolutePosition.X, minX, maxX)
local newY = math.clamp(MinimizedIcon.AbsolutePosition.Y, minY, maxY)

if MinimizedIcon.AbsolutePosition.X ~= newX or MinimizedIcon.AbsolutePosition.Y ~= newY then
    MinimizedIcon.Position = UDim2.new(0, newX, 0, newY)
end
end

local function LimitSubMenuDragging()
local screenSize = workspace.CurrentCamera.ViewportSize
local frameSize = SubMenuFrame.AbsoluteSize
local minX = 0
local minY = 0
local maxX = screenSize.X - frameSize.X
local maxY = screenSize.Y - frameSize.Y

local newX = math.clamp(SubMenuFrame.AbsolutePosition.X, minX, maxX)
local newY = math.clamp(SubMenuFrame.AbsolutePosition.Y, minY, maxY)

if SubMenuFrame.AbsolutePosition.X ~= newX or SubMenuFrame.AbsolutePosition.Y ~= newY then
    SubMenuFrame.Position = UDim2.new(0, newX, 0, newY)
end
end

local function LimitPositionSubMenuDragging()
local screenSize = workspace.CurrentCamera.ViewportSize
local frameSize = PositionSubMenuFrame.AbsoluteSize
local minX = 0
local minY = 0
local maxX = screenSize.X - frameSize.X
local maxY = screenSize.Y - frameSize.Y

local newX = math.clamp(PositionSubMenuFrame.AbsolutePosition.X, minX, maxX)
local newY = math.clamp(PositionSubMenuFrame.AbsolutePosition.Y, minY, maxY)

if PositionSubMenuFrame.AbsolutePosition.X ~= newX or PositionSubMenuFrame.AbsolutePosition.Y ~= newY then
    PositionSubMenuFrame.Position = UDim2.new(0, newX, 0, newY)
end
end

-- Event Connections
CloseButton.MouseButton1Click:Connect(function()
ScreenGui:Destroy()

-- Clean up
if NoClipping then
    ToggleNoclip()
end
if AutoPlatform then
    TogglePlatform()
end
if FollowingTarget then
    ToggleFollowTarget()
end
if RunningAway then
    ToggleRunAway()
end
if AutoCheckPosition then
    ToggleAutoCheckPosition()
end
if ViewingTarget then
    ToggleViewTarget()
end
if ESPEnabled then
    ToggleESP()
end
if HitboxEnabled then
    ToggleHitbox()
end
if GlowEnabled then
    ToggleGlow()
end
if ESPHPEnabled then
    ToggleESPHP()
end
if ESPPositionEnabled then
    ToggleESPPosition()
end
if FollowingPosition then
    ToggleFollowPosition()
end
if AutoRunEnabled then
    ToggleAutoRun()
end
end)

MinimizeButton.MouseButton1Click:Connect(function()
Minimized = true
MainFrame.Visible = false
MinimizedIcon.Visible = true
end)

MinimizedIcon.MouseButton1Click:Connect(function()
Minimized = false
MainFrame.Visible = true
MinimizedIcon.Visible = false
end)

SubMenuButton.MouseButton1Click:Connect(function()
ToggleSubMenu()
end)

PositionSubMenuButton.MouseButton1Click:Connect(function()
TogglePositionSubMenu()
end)

SubMenuCloseButton.MouseButton1Click:Connect(function()
SubMenuFrame.Visible = false
SubMenuVisible = false
end)

PositionSubMenuCloseButton.MouseButton1Click:Connect(function()
PositionSubMenuFrame.Visible = false
PositionSubMenuVisible = false
end)

-- Ensure draggable frames stay within screen bounds
RunService.RenderStepped:Connect(function()
if MainFrame.Visible then
    LimitDragging()
end
if MinimizedIcon.Visible then
    LimitIconDragging()
end
if SubMenuFrame.Visible then
    LimitSubMenuDragging()
end
if PositionSubMenuFrame.Visible then
    LimitPositionSubMenuDragging()
end

-- Update target info if target exists
if TargetPlayer then
    UpdateTargetInfo()
end
end)

SubmitButton.MouseButton1Click:Connect(function()
if KeyInput.Text == KEY then
    Authenticated = true
    AuthFrame.Visible = false
    FeaturesFrame.Visible = true
    PopulatePlayerList() -- Initialize player list
else
    KeyInput.Text = ""
    KeyInput.PlaceholderText = "Invalid Key! Try Again..."
end
end)

TargetDropdown.MouseButton1Click:Connect(function()
DropdownFrame.Visible = not DropdownFrame.Visible
end)

ReloadButton.MouseButton1Click:Connect(function()
PopulatePlayerList()
end)

NearestPlayerButton.MouseButton1Click:Connect(function()
local nearest = FindNearestPlayer()
if nearest then
    TargetPlayer = nearest
    TargetDropdown.Text = nearest.Name
    UpdateTargetInfo()
    
    -- Highlight selected player button
    for _, btn in pairs(PlayerScrollFrame:GetChildren()) do
        if btn:IsA("TextButton") then
            if btn.Name == nearest.Name .. "Button" then
                btn.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
                btn:FindFirstChildOfClass("UIStroke").Enabled = true
            else
                btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                btn:FindFirstChildOfClass("UIStroke").Enabled = false
            end
        end
    end
end
end)

ViewTargetButton.MouseButton1Click:Connect(function()
ToggleViewTarget()
end)

FollowButton.MouseButton1Click:Connect(function()
ToggleFollowTarget()
end)

NextButton.MouseButton1Click:Connect(function()
ToggleAutoNext()
end)

NoclipButton.MouseButton1Click:Connect(function()
ToggleNoclip()
end)

PlatformButton.MouseButton1Click:Connect(function()
TogglePlatform()
end)

RunButton.MouseButton1Click:Connect(function()
ToggleRunAway()
end)

AutoRunButton.MouseButton1Click:Connect(function()
ToggleAutoRun()
end)

SavePositionButton.MouseButton1Click:Connect(function()
SaveCurrentPosition()
end)

TeleportToSavedButton.MouseButton1Click:Connect(function()
TeleportToSavedPosition()
end)

AutoCheckButton.MouseButton1Click:Connect(function()
ToggleAutoCheckPosition()
end)

ApplySettingsButton.MouseButton1Click:Connect(function()
ApplySafetySettings()
end)

FollowPositionButton.MouseButton1Click:Connect(function()
ToggleFollowPosition()
end)

ESPNameButton.MouseButton1Click:Connect(function()
ToggleESP()
end)

HitboxButton.MouseButton1Click:Connect(function()
ToggleHitbox()
end)

GlowButton.MouseButton1Click:Connect(function()
ToggleGlow()
end)

ESPHPButton.MouseButton1Click:Connect(function()
ToggleESPHP()
end)

ESPPositionButton.MouseButton1Click:Connect(function()
ToggleESPPosition()
end)

-- Auto disable checkbox
AutoDisableCheck.InputBegan:Connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseButton1 then
    ToggleAutoDisable()
end
end)

-- Distance control buttons
HorizontalPlus.MouseButton1Click:Connect(function()
local currentValue = tonumber(HorizontalInput.Text) or 5
HorizontalInput.Text = tostring(currentValue + 0.5)
DistanceBehind = currentValue + 0.5
end)

HorizontalMinus.MouseButton1Click:Connect(function()
local currentValue = tonumber(HorizontalInput.Text) or 5
HorizontalInput.Text = tostring(math.max(0, currentValue - 0.5))
DistanceBehind = math.max(0, currentValue - 0.5)
end)

VerticalPlus.MouseButton1Click:Connect(function()
local currentValue = tonumber(VerticalInput.Text) or 0
VerticalInput.Text = tostring
